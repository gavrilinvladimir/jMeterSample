/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 78.0, "minX": 0.0, "maxY": 11308.0, "series": [{"data": [[0.0, 110.0], [0.1, 111.0], [0.2, 113.0], [0.3, 114.0], [0.4, 117.0], [0.5, 121.0], [0.6, 129.0], [0.7, 136.0], [0.8, 149.0], [0.9, 154.0], [1.0, 157.0], [1.1, 158.0], [1.2, 162.0], [1.3, 167.0], [1.4, 173.0], [1.5, 175.0], [1.6, 177.0], [1.7, 181.0], [1.8, 182.0], [1.9, 182.0], [2.0, 183.0], [2.1, 186.0], [2.2, 193.0], [2.3, 209.0], [2.4, 212.0], [2.5, 213.0], [2.6, 214.0], [2.7, 221.0], [2.8, 224.0], [2.9, 228.0], [3.0, 231.0], [3.1, 239.0], [3.2, 243.0], [3.3, 249.0], [3.4, 250.0], [3.5, 253.0], [3.6, 254.0], [3.7, 255.0], [3.8, 256.0], [3.9, 257.0], [4.0, 258.0], [4.1, 261.0], [4.2, 266.0], [4.3, 266.0], [4.4, 267.0], [4.5, 270.0], [4.6, 273.0], [4.7, 277.0], [4.8, 280.0], [4.9, 286.0], [5.0, 288.0], [5.1, 290.0], [5.2, 294.0], [5.3, 294.0], [5.4, 300.0], [5.5, 300.0], [5.6, 302.0], [5.7, 302.0], [5.8, 304.0], [5.9, 305.0], [6.0, 308.0], [6.1, 314.0], [6.2, 315.0], [6.3, 317.0], [6.4, 320.0], [6.5, 320.0], [6.6, 321.0], [6.7, 324.0], [6.8, 324.0], [6.9, 325.0], [7.0, 325.0], [7.1, 327.0], [7.2, 328.0], [7.3, 330.0], [7.4, 331.0], [7.5, 332.0], [7.6, 334.0], [7.7, 338.0], [7.8, 339.0], [7.9, 345.0], [8.0, 345.0], [8.1, 352.0], [8.2, 356.0], [8.3, 356.0], [8.4, 359.0], [8.5, 361.0], [8.6, 366.0], [8.7, 369.0], [8.8, 373.0], [8.9, 374.0], [9.0, 375.0], [9.1, 382.0], [9.2, 389.0], [9.3, 392.0], [9.4, 397.0], [9.5, 397.0], [9.6, 402.0], [9.7, 407.0], [9.8, 417.0], [9.9, 423.0], [10.0, 424.0], [10.1, 427.0], [10.2, 427.0], [10.3, 431.0], [10.4, 432.0], [10.5, 436.0], [10.6, 436.0], [10.7, 440.0], [10.8, 444.0], [10.9, 446.0], [11.0, 448.0], [11.1, 452.0], [11.2, 454.0], [11.3, 461.0], [11.4, 463.0], [11.5, 464.0], [11.6, 465.0], [11.7, 468.0], [11.8, 468.0], [11.9, 471.0], [12.0, 472.0], [12.1, 476.0], [12.2, 486.0], [12.3, 488.0], [12.4, 491.0], [12.5, 492.0], [12.6, 501.0], [12.7, 501.0], [12.8, 508.0], [12.9, 508.0], [13.0, 512.0], [13.1, 512.0], [13.2, 517.0], [13.3, 518.0], [13.4, 520.0], [13.5, 522.0], [13.6, 524.0], [13.7, 524.0], [13.8, 527.0], [13.9, 528.0], [14.0, 533.0], [14.1, 536.0], [14.2, 537.0], [14.3, 539.0], [14.4, 540.0], [14.5, 546.0], [14.6, 550.0], [14.7, 558.0], [14.8, 561.0], [14.9, 564.0], [15.0, 566.0], [15.1, 568.0], [15.2, 569.0], [15.3, 583.0], [15.4, 586.0], [15.5, 594.0], [15.6, 598.0], [15.7, 606.0], [15.8, 607.0], [15.9, 609.0], [16.0, 614.0], [16.1, 620.0], [16.2, 623.0], [16.3, 629.0], [16.4, 631.0], [16.5, 632.0], [16.6, 638.0], [16.7, 639.0], [16.8, 646.0], [16.9, 646.0], [17.0, 651.0], [17.1, 655.0], [17.2, 658.0], [17.3, 660.0], [17.4, 664.0], [17.5, 664.0], [17.6, 671.0], [17.7, 671.0], [17.8, 677.0], [17.9, 677.0], [18.0, 680.0], [18.1, 682.0], [18.2, 686.0], [18.3, 691.0], [18.4, 696.0], [18.5, 702.0], [18.6, 702.0], [18.7, 704.0], [18.8, 705.0], [18.9, 705.0], [19.0, 706.0], [19.1, 715.0], [19.2, 716.0], [19.3, 721.0], [19.4, 721.0], [19.5, 722.0], [19.6, 730.0], [19.7, 733.0], [19.8, 735.0], [19.9, 739.0], [20.0, 741.0], [20.1, 742.0], [20.2, 748.0], [20.3, 748.0], [20.4, 752.0], [20.5, 754.0], [20.6, 757.0], [20.7, 758.0], [20.8, 765.0], [20.9, 765.0], [21.0, 766.0], [21.1, 767.0], [21.2, 769.0], [21.3, 771.0], [21.4, 774.0], [21.5, 776.0], [21.6, 780.0], [21.7, 780.0], [21.8, 785.0], [21.9, 787.0], [22.0, 791.0], [22.1, 794.0], [22.2, 796.0], [22.3, 806.0], [22.4, 807.0], [22.5, 809.0], [22.6, 810.0], [22.7, 817.0], [22.8, 818.0], [22.9, 823.0], [23.0, 826.0], [23.1, 827.0], [23.2, 829.0], [23.3, 832.0], [23.4, 832.0], [23.5, 840.0], [23.6, 842.0], [23.7, 847.0], [23.8, 850.0], [23.9, 855.0], [24.0, 858.0], [24.1, 859.0], [24.2, 864.0], [24.3, 865.0], [24.4, 869.0], [24.5, 869.0], [24.6, 875.0], [24.7, 876.0], [24.8, 881.0], [24.9, 882.0], [25.0, 884.0], [25.1, 887.0], [25.2, 889.0], [25.3, 893.0], [25.4, 901.0], [25.5, 902.0], [25.6, 904.0], [25.7, 905.0], [25.8, 909.0], [25.9, 910.0], [26.0, 912.0], [26.1, 917.0], [26.2, 919.0], [26.3, 926.0], [26.4, 929.0], [26.5, 930.0], [26.6, 932.0], [26.7, 936.0], [26.8, 942.0], [26.9, 944.0], [27.0, 948.0], [27.1, 950.0], [27.2, 954.0], [27.3, 962.0], [27.4, 962.0], [27.5, 965.0], [27.6, 966.0], [27.7, 970.0], [27.8, 972.0], [27.9, 978.0], [28.0, 983.0], [28.1, 984.0], [28.2, 984.0], [28.3, 984.0], [28.4, 988.0], [28.5, 988.0], [28.6, 991.0], [28.7, 992.0], [28.8, 996.0], [28.9, 997.0], [29.0, 1001.0], [29.1, 1004.0], [29.2, 1015.0], [29.3, 1015.0], [29.4, 1025.0], [29.5, 1025.0], [29.6, 1026.0], [29.7, 1028.0], [29.8, 1032.0], [29.9, 1033.0], [30.0, 1034.0], [30.1, 1035.0], [30.2, 1036.0], [30.3, 1040.0], [30.4, 1049.0], [30.5, 1059.0], [30.6, 1062.0], [30.7, 1068.0], [30.8, 1072.0], [30.9, 1080.0], [31.0, 1080.0], [31.1, 1086.0], [31.2, 1090.0], [31.3, 1091.0], [31.4, 1092.0], [31.5, 1100.0], [31.6, 1103.0], [31.7, 1126.0], [31.8, 1129.0], [31.9, 1133.0], [32.0, 1135.0], [32.1, 1136.0], [32.2, 1140.0], [32.3, 1140.0], [32.4, 1146.0], [32.5, 1147.0], [32.6, 1155.0], [32.7, 1155.0], [32.8, 1166.0], [32.9, 1167.0], [33.0, 1170.0], [33.1, 1171.0], [33.2, 1182.0], [33.3, 1193.0], [33.4, 1202.0], [33.5, 1208.0], [33.6, 1213.0], [33.7, 1215.0], [33.8, 1220.0], [33.9, 1221.0], [34.0, 1227.0], [34.1, 1227.0], [34.2, 1229.0], [34.3, 1236.0], [34.4, 1236.0], [34.5, 1238.0], [34.6, 1240.0], [34.7, 1247.0], [34.8, 1249.0], [34.9, 1251.0], [35.0, 1251.0], [35.1, 1252.0], [35.2, 1253.0], [35.3, 1257.0], [35.4, 1266.0], [35.5, 1272.0], [35.6, 1273.0], [35.7, 1284.0], [35.8, 1290.0], [35.9, 1303.0], [36.0, 1306.0], [36.1, 1308.0], [36.2, 1312.0], [36.3, 1313.0], [36.4, 1318.0], [36.5, 1318.0], [36.6, 1319.0], [36.7, 1323.0], [36.8, 1324.0], [36.9, 1326.0], [37.0, 1329.0], [37.1, 1334.0], [37.2, 1339.0], [37.3, 1339.0], [37.4, 1341.0], [37.5, 1343.0], [37.6, 1345.0], [37.7, 1346.0], [37.8, 1347.0], [37.9, 1349.0], [38.0, 1351.0], [38.1, 1351.0], [38.2, 1352.0], [38.3, 1352.0], [38.4, 1353.0], [38.5, 1358.0], [38.6, 1359.0], [38.7, 1361.0], [38.8, 1362.0], [38.9, 1365.0], [39.0, 1367.0], [39.1, 1378.0], [39.2, 1379.0], [39.3, 1381.0], [39.4, 1382.0], [39.5, 1385.0], [39.6, 1393.0], [39.7, 1395.0], [39.8, 1398.0], [39.9, 1399.0], [40.0, 1403.0], [40.1, 1406.0], [40.2, 1407.0], [40.3, 1409.0], [40.4, 1410.0], [40.5, 1413.0], [40.6, 1418.0], [40.7, 1419.0], [40.8, 1421.0], [40.9, 1422.0], [41.0, 1427.0], [41.1, 1427.0], [41.2, 1430.0], [41.3, 1430.0], [41.4, 1431.0], [41.5, 1438.0], [41.6, 1441.0], [41.7, 1445.0], [41.8, 1449.0], [41.9, 1451.0], [42.0, 1453.0], [42.1, 1459.0], [42.2, 1460.0], [42.3, 1465.0], [42.4, 1469.0], [42.5, 1473.0], [42.6, 1473.0], [42.7, 1484.0], [42.8, 1487.0], [42.9, 1487.0], [43.0, 1488.0], [43.1, 1491.0], [43.2, 1493.0], [43.3, 1495.0], [43.4, 1495.0], [43.5, 1507.0], [43.6, 1507.0], [43.7, 1509.0], [43.8, 1511.0], [43.9, 1512.0], [44.0, 1517.0], [44.1, 1518.0], [44.2, 1523.0], [44.3, 1527.0], [44.4, 1531.0], [44.5, 1536.0], [44.6, 1540.0], [44.7, 1543.0], [44.8, 1544.0], [44.9, 1546.0], [45.0, 1555.0], [45.1, 1565.0], [45.2, 1566.0], [45.3, 1568.0], [45.4, 1570.0], [45.5, 1572.0], [45.6, 1577.0], [45.7, 1579.0], [45.8, 1582.0], [45.9, 1587.0], [46.0, 1588.0], [46.1, 1590.0], [46.2, 1591.0], [46.3, 1594.0], [46.4, 1594.0], [46.5, 1598.0], [46.6, 1598.0], [46.7, 1601.0], [46.8, 1601.0], [46.9, 1608.0], [47.0, 1609.0], [47.1, 1610.0], [47.2, 1610.0], [47.3, 1612.0], [47.4, 1615.0], [47.5, 1618.0], [47.6, 1622.0], [47.7, 1624.0], [47.8, 1636.0], [47.9, 1640.0], [48.0, 1643.0], [48.1, 1643.0], [48.2, 1648.0], [48.3, 1649.0], [48.4, 1652.0], [48.5, 1653.0], [48.6, 1654.0], [48.7, 1656.0], [48.8, 1664.0], [48.9, 1665.0], [49.0, 1670.0], [49.1, 1671.0], [49.2, 1675.0], [49.3, 1680.0], [49.4, 1683.0], [49.5, 1689.0], [49.6, 1692.0], [49.7, 1693.0], [49.8, 1697.0], [49.9, 1702.0], [50.0, 1704.0], [50.1, 1708.0], [50.2, 1711.0], [50.3, 1715.0], [50.4, 1715.0], [50.5, 1719.0], [50.6, 1721.0], [50.7, 1726.0], [50.8, 1730.0], [50.9, 1733.0], [51.0, 1734.0], [51.1, 1737.0], [51.2, 1737.0], [51.3, 1741.0], [51.4, 1743.0], [51.5, 1748.0], [51.6, 1748.0], [51.7, 1750.0], [51.8, 1752.0], [51.9, 1755.0], [52.0, 1762.0], [52.1, 1767.0], [52.2, 1777.0], [52.3, 1779.0], [52.4, 1783.0], [52.5, 1783.0], [52.6, 1794.0], [52.7, 1795.0], [52.8, 1806.0], [52.9, 1808.0], [53.0, 1812.0], [53.1, 1817.0], [53.2, 1817.0], [53.3, 1817.0], [53.4, 1819.0], [53.5, 1820.0], [53.6, 1822.0], [53.7, 1830.0], [53.8, 1850.0], [53.9, 1852.0], [54.0, 1862.0], [54.1, 1865.0], [54.2, 1870.0], [54.3, 1883.0], [54.4, 1884.0], [54.5, 1887.0], [54.6, 1888.0], [54.7, 1898.0], [54.8, 1900.0], [54.9, 1908.0], [55.0, 1908.0], [55.1, 1914.0], [55.2, 1918.0], [55.3, 1930.0], [55.4, 1932.0], [55.5, 1934.0], [55.6, 1934.0], [55.7, 1938.0], [55.8, 1940.0], [55.9, 1945.0], [56.0, 1951.0], [56.1, 1952.0], [56.2, 1959.0], [56.3, 1960.0], [56.4, 1962.0], [56.5, 1962.0], [56.6, 1979.0], [56.7, 1980.0], [56.8, 1984.0], [56.9, 1985.0], [57.0, 1991.0], [57.1, 1997.0], [57.2, 1998.0], [57.3, 2000.0], [57.4, 2011.0], [57.5, 2016.0], [57.6, 2019.0], [57.7, 2022.0], [57.8, 2027.0], [57.9, 2028.0], [58.0, 2033.0], [58.1, 2037.0], [58.2, 2040.0], [58.3, 2043.0], [58.4, 2048.0], [58.5, 2050.0], [58.6, 2053.0], [58.7, 2054.0], [58.8, 2057.0], [58.9, 2062.0], [59.0, 2064.0], [59.1, 2065.0], [59.2, 2067.0], [59.3, 2074.0], [59.4, 2075.0], [59.5, 2077.0], [59.6, 2080.0], [59.7, 2085.0], [59.8, 2085.0], [59.9, 2089.0], [60.0, 2091.0], [60.1, 2091.0], [60.2, 2093.0], [60.3, 2095.0], [60.4, 2107.0], [60.5, 2110.0], [60.6, 2113.0], [60.7, 2115.0], [60.8, 2121.0], [60.9, 2124.0], [61.0, 2128.0], [61.1, 2135.0], [61.2, 2141.0], [61.3, 2141.0], [61.4, 2144.0], [61.5, 2146.0], [61.6, 2149.0], [61.7, 2149.0], [61.8, 2152.0], [61.9, 2152.0], [62.0, 2156.0], [62.1, 2161.0], [62.2, 2163.0], [62.3, 2164.0], [62.4, 2164.0], [62.5, 2164.0], [62.6, 2170.0], [62.7, 2185.0], [62.8, 2186.0], [62.9, 2189.0], [63.0, 2192.0], [63.1, 2193.0], [63.2, 2195.0], [63.3, 2202.0], [63.4, 2209.0], [63.5, 2215.0], [63.6, 2226.0], [63.7, 2227.0], [63.8, 2227.0], [63.9, 2234.0], [64.0, 2243.0], [64.1, 2244.0], [64.2, 2248.0], [64.3, 2248.0], [64.4, 2250.0], [64.5, 2251.0], [64.6, 2262.0], [64.7, 2262.0], [64.8, 2264.0], [64.9, 2266.0], [65.0, 2271.0], [65.1, 2274.0], [65.2, 2277.0], [65.3, 2279.0], [65.4, 2283.0], [65.5, 2283.0], [65.6, 2284.0], [65.7, 2285.0], [65.8, 2292.0], [65.9, 2294.0], [66.0, 2300.0], [66.1, 2304.0], [66.2, 2308.0], [66.3, 2310.0], [66.4, 2313.0], [66.5, 2323.0], [66.6, 2324.0], [66.7, 2327.0], [66.8, 2333.0], [66.9, 2338.0], [67.0, 2340.0], [67.1, 2344.0], [67.2, 2351.0], [67.3, 2358.0], [67.4, 2360.0], [67.5, 2362.0], [67.6, 2364.0], [67.7, 2365.0], [67.8, 2372.0], [67.9, 2375.0], [68.0, 2383.0], [68.1, 2384.0], [68.2, 2386.0], [68.3, 2395.0], [68.4, 2399.0], [68.5, 2401.0], [68.6, 2404.0], [68.7, 2413.0], [68.8, 2417.0], [68.9, 2417.0], [69.0, 2418.0], [69.1, 2419.0], [69.2, 2425.0], [69.3, 2427.0], [69.4, 2437.0], [69.5, 2438.0], [69.6, 2442.0], [69.7, 2446.0], [69.8, 2452.0], [69.9, 2452.0], [70.0, 2455.0], [70.1, 2460.0], [70.2, 2463.0], [70.3, 2474.0], [70.4, 2474.0], [70.5, 2477.0], [70.6, 2481.0], [70.7, 2489.0], [70.8, 2491.0], [70.9, 2497.0], [71.0, 2502.0], [71.1, 2506.0], [71.2, 2507.0], [71.3, 2532.0], [71.4, 2539.0], [71.5, 2539.0], [71.6, 2541.0], [71.7, 2546.0], [71.8, 2546.0], [71.9, 2559.0], [72.0, 2560.0], [72.1, 2562.0], [72.2, 2566.0], [72.3, 2566.0], [72.4, 2571.0], [72.5, 2571.0], [72.6, 2576.0], [72.7, 2577.0], [72.8, 2582.0], [72.9, 2582.0], [73.0, 2583.0], [73.1, 2584.0], [73.2, 2607.0], [73.3, 2613.0], [73.4, 2618.0], [73.5, 2620.0], [73.6, 2627.0], [73.7, 2627.0], [73.8, 2642.0], [73.9, 2643.0], [74.0, 2647.0], [74.1, 2651.0], [74.2, 2652.0], [74.3, 2655.0], [74.4, 2663.0], [74.5, 2677.0], [74.6, 2678.0], [74.7, 2684.0], [74.8, 2685.0], [74.9, 2686.0], [75.0, 2689.0], [75.1, 2690.0], [75.2, 2694.0], [75.3, 2701.0], [75.4, 2702.0], [75.5, 2704.0], [75.6, 2708.0], [75.7, 2715.0], [75.8, 2717.0], [75.9, 2725.0], [76.0, 2730.0], [76.1, 2735.0], [76.2, 2741.0], [76.3, 2743.0], [76.4, 2746.0], [76.5, 2746.0], [76.6, 2758.0], [76.7, 2759.0], [76.8, 2761.0], [76.9, 2764.0], [77.0, 2765.0], [77.1, 2768.0], [77.2, 2775.0], [77.3, 2779.0], [77.4, 2788.0], [77.5, 2791.0], [77.6, 2793.0], [77.7, 2793.0], [77.8, 2798.0], [77.9, 2800.0], [78.0, 2805.0], [78.1, 2811.0], [78.2, 2811.0], [78.3, 2815.0], [78.4, 2820.0], [78.5, 2825.0], [78.6, 2827.0], [78.7, 2832.0], [78.8, 2833.0], [78.9, 2848.0], [79.0, 2849.0], [79.1, 2851.0], [79.2, 2855.0], [79.3, 2873.0], [79.4, 2877.0], [79.5, 2892.0], [79.6, 2894.0], [79.7, 2899.0], [79.8, 2901.0], [79.9, 2903.0], [80.0, 2910.0], [80.1, 2920.0], [80.2, 2922.0], [80.3, 2923.0], [80.4, 2928.0], [80.5, 2936.0], [80.6, 2941.0], [80.7, 2949.0], [80.8, 2960.0], [80.9, 2960.0], [81.0, 2962.0], [81.1, 2965.0], [81.2, 2967.0], [81.3, 2970.0], [81.4, 2970.0], [81.5, 2971.0], [81.6, 2975.0], [81.7, 2978.0], [81.8, 2980.0], [81.9, 2983.0], [82.0, 2991.0], [82.1, 2998.0], [82.2, 3004.0], [82.3, 3012.0], [82.4, 3016.0], [82.5, 3024.0], [82.6, 3029.0], [82.7, 3033.0], [82.8, 3035.0], [82.9, 3038.0], [83.0, 3041.0], [83.1, 3045.0], [83.2, 3047.0], [83.3, 3048.0], [83.4, 3054.0], [83.5, 3061.0], [83.6, 3062.0], [83.7, 3073.0], [83.8, 3073.0], [83.9, 3083.0], [84.0, 3083.0], [84.1, 3088.0], [84.2, 3094.0], [84.3, 3095.0], [84.4, 3097.0], [84.5, 3099.0], [84.6, 3102.0], [84.7, 3105.0], [84.8, 3108.0], [84.9, 3108.0], [85.0, 3112.0], [85.1, 3113.0], [85.2, 3113.0], [85.3, 3115.0], [85.4, 3123.0], [85.5, 3123.0], [85.6, 3124.0], [85.7, 3125.0], [85.8, 3127.0], [85.9, 3136.0], [86.0, 3139.0], [86.1, 3145.0], [86.2, 3146.0], [86.3, 3158.0], [86.4, 3159.0], [86.5, 3170.0], [86.6, 3171.0], [86.7, 3172.0], [86.8, 3181.0], [86.9, 3189.0], [87.0, 3191.0], [87.1, 3199.0], [87.2, 3199.0], [87.3, 3215.0], [87.4, 3220.0], [87.5, 3222.0], [87.6, 3222.0], [87.7, 3227.0], [87.8, 3232.0], [87.9, 3234.0], [88.0, 3236.0], [88.1, 3239.0], [88.2, 3241.0], [88.3, 3249.0], [88.4, 3262.0], [88.5, 3268.0], [88.6, 3273.0], [88.7, 3275.0], [88.8, 3290.0], [88.9, 3291.0], [89.0, 3295.0], [89.1, 3296.0], [89.2, 3317.0], [89.3, 3321.0], [89.4, 3329.0], [89.5, 3332.0], [89.6, 3342.0], [89.7, 3342.0], [89.8, 3346.0], [89.9, 3350.0], [90.0, 3357.0], [90.1, 3362.0], [90.2, 3368.0], [90.3, 3372.0], [90.4, 3372.0], [90.5, 3386.0], [90.6, 3394.0], [90.7, 3399.0], [90.8, 3399.0], [90.9, 3412.0], [91.0, 3413.0], [91.1, 3421.0], [91.2, 3427.0], [91.3, 3433.0], [91.4, 3438.0], [91.5, 3456.0], [91.6, 3457.0], [91.7, 3471.0], [91.8, 3475.0], [91.9, 3479.0], [92.0, 3483.0], [92.1, 3488.0], [92.2, 3495.0], [92.3, 3496.0], [92.4, 3503.0], [92.5, 3503.0], [92.6, 3527.0], [92.7, 3529.0], [92.8, 3540.0], [92.9, 3542.0], [93.0, 3548.0], [93.1, 3556.0], [93.2, 3562.0], [93.3, 3566.0], [93.4, 3586.0], [93.5, 3589.0], [93.6, 3592.0], [93.7, 3595.0], [93.8, 3597.0], [93.9, 3598.0], [94.0, 3602.0], [94.1, 3607.0], [94.2, 3607.0], [94.3, 3612.0], [94.4, 3615.0], [94.5, 3619.0], [94.6, 3620.0], [94.7, 3634.0], [94.8, 3649.0], [94.9, 3659.0], [95.0, 3669.0], [95.1, 3671.0], [95.2, 3671.0], [95.3, 3676.0], [95.4, 3677.0], [95.5, 3679.0], [95.6, 3681.0], [95.7, 3690.0], [95.8, 3690.0], [95.9, 3709.0], [96.0, 3725.0], [96.1, 3737.0], [96.2, 3740.0], [96.3, 3750.0], [96.4, 3755.0], [96.5, 3759.0], [96.6, 3769.0], [96.7, 3787.0], [96.8, 3796.0], [96.9, 3796.0], [97.0, 3808.0], [97.1, 3809.0], [97.2, 3811.0], [97.3, 3817.0], [97.4, 3833.0], [97.5, 3838.0], [97.6, 3850.0], [97.7, 3857.0], [97.8, 3867.0], [97.9, 3873.0], [98.0, 3889.0], [98.1, 3897.0], [98.2, 3902.0], [98.3, 3913.0], [98.4, 3925.0], [98.5, 3942.0], [98.6, 3943.0], [98.7, 3964.0], [98.8, 3967.0], [98.9, 3969.0], [99.0, 3976.0], [99.1, 3993.0], [99.2, 3999.0], [99.3, 4007.0], [99.4, 4008.0], [99.5, 4037.0], [99.6, 4046.0], [99.7, 4071.0], [99.8, 4074.0], [99.9, 4086.0], [100.0, 4310.0]], "isOverall": false, "label": "100 users", "isController": false}, {"data": [[0.0, 78.0], [0.1, 79.0], [0.2, 82.0], [0.3, 85.0], [0.4, 87.0], [0.5, 88.0], [0.6, 88.0], [0.7, 89.0], [0.8, 92.0], [0.9, 94.0], [1.0, 94.0], [1.1, 95.0], [1.2, 98.0], [1.3, 99.0], [1.4, 100.0], [1.5, 102.0], [1.6, 102.0], [1.7, 103.0], [1.8, 103.0], [1.9, 106.0], [2.0, 106.0], [2.1, 108.0], [2.2, 109.0], [2.3, 112.0], [2.4, 113.0], [2.5, 115.0], [2.6, 118.0], [2.7, 119.0], [2.8, 122.0], [2.9, 127.0], [3.0, 129.0], [3.1, 130.0], [3.2, 130.0], [3.3, 131.0], [3.4, 132.0], [3.5, 136.0], [3.6, 139.0], [3.7, 140.0], [3.8, 140.0], [3.9, 142.0], [4.0, 142.0], [4.1, 145.0], [4.2, 145.0], [4.3, 146.0], [4.4, 149.0], [4.5, 150.0], [4.6, 154.0], [4.7, 154.0], [4.8, 155.0], [4.9, 157.0], [5.0, 157.0], [5.1, 158.0], [5.2, 161.0], [5.3, 162.0], [5.4, 162.0], [5.5, 162.0], [5.6, 163.0], [5.7, 166.0], [5.8, 166.0], [5.9, 167.0], [6.0, 169.0], [6.1, 169.0], [6.2, 172.0], [6.3, 173.0], [6.4, 174.0], [6.5, 175.0], [6.6, 177.0], [6.7, 178.0], [6.8, 179.0], [6.9, 180.0], [7.0, 182.0], [7.1, 183.0], [7.2, 184.0], [7.3, 184.0], [7.4, 185.0], [7.5, 187.0], [7.6, 188.0], [7.7, 189.0], [7.8, 189.0], [7.9, 191.0], [8.0, 191.0], [8.1, 194.0], [8.2, 194.0], [8.3, 197.0], [8.4, 197.0], [8.5, 199.0], [8.6, 200.0], [8.7, 201.0], [8.8, 202.0], [8.9, 202.0], [9.0, 204.0], [9.1, 204.0], [9.2, 205.0], [9.3, 208.0], [9.4, 208.0], [9.5, 208.0], [9.6, 214.0], [9.7, 214.0], [9.8, 216.0], [9.9, 216.0], [10.0, 216.0], [10.1, 218.0], [10.2, 219.0], [10.3, 220.0], [10.4, 220.0], [10.5, 220.0], [10.6, 223.0], [10.7, 223.0], [10.8, 226.0], [10.9, 227.0], [11.0, 227.0], [11.1, 229.0], [11.2, 232.0], [11.3, 233.0], [11.4, 235.0], [11.5, 237.0], [11.6, 239.0], [11.7, 240.0], [11.8, 241.0], [11.9, 242.0], [12.0, 243.0], [12.1, 244.0], [12.2, 246.0], [12.3, 247.0], [12.4, 247.0], [12.5, 248.0], [12.6, 248.0], [12.7, 252.0], [12.8, 255.0], [12.9, 256.0], [13.0, 258.0], [13.1, 259.0], [13.2, 261.0], [13.3, 262.0], [13.4, 264.0], [13.5, 264.0], [13.6, 264.0], [13.7, 266.0], [13.8, 267.0], [13.9, 269.0], [14.0, 270.0], [14.1, 271.0], [14.2, 272.0], [14.3, 272.0], [14.4, 273.0], [14.5, 274.0], [14.6, 275.0], [14.7, 276.0], [14.8, 277.0], [14.9, 281.0], [15.0, 281.0], [15.1, 281.0], [15.2, 282.0], [15.3, 282.0], [15.4, 283.0], [15.5, 285.0], [15.6, 288.0], [15.7, 289.0], [15.8, 290.0], [15.9, 290.0], [16.0, 291.0], [16.1, 291.0], [16.2, 292.0], [16.3, 296.0], [16.4, 297.0], [16.5, 297.0], [16.6, 298.0], [16.7, 299.0], [16.8, 299.0], [16.9, 300.0], [17.0, 301.0], [17.1, 302.0], [17.2, 303.0], [17.3, 303.0], [17.4, 304.0], [17.5, 307.0], [17.6, 309.0], [17.7, 309.0], [17.8, 309.0], [17.9, 311.0], [18.0, 312.0], [18.1, 315.0], [18.2, 316.0], [18.3, 317.0], [18.4, 317.0], [18.5, 318.0], [18.6, 319.0], [18.7, 322.0], [18.8, 322.0], [18.9, 322.0], [19.0, 323.0], [19.1, 324.0], [19.2, 326.0], [19.3, 326.0], [19.4, 327.0], [19.5, 329.0], [19.6, 331.0], [19.7, 333.0], [19.8, 333.0], [19.9, 334.0], [20.0, 335.0], [20.1, 337.0], [20.2, 338.0], [20.3, 340.0], [20.4, 340.0], [20.5, 340.0], [20.6, 342.0], [20.7, 342.0], [20.8, 344.0], [20.9, 345.0], [21.0, 346.0], [21.1, 347.0], [21.2, 348.0], [21.3, 350.0], [21.4, 350.0], [21.5, 350.0], [21.6, 351.0], [21.7, 352.0], [21.8, 353.0], [21.9, 353.0], [22.0, 355.0], [22.1, 358.0], [22.2, 359.0], [22.3, 359.0], [22.4, 359.0], [22.5, 361.0], [22.6, 363.0], [22.7, 366.0], [22.8, 367.0], [22.9, 369.0], [23.0, 369.0], [23.1, 372.0], [23.2, 374.0], [23.3, 374.0], [23.4, 376.0], [23.5, 378.0], [23.6, 380.0], [23.7, 383.0], [23.8, 385.0], [23.9, 386.0], [24.0, 386.0], [24.1, 388.0], [24.2, 388.0], [24.3, 388.0], [24.4, 389.0], [24.5, 389.0], [24.6, 391.0], [24.7, 391.0], [24.8, 391.0], [24.9, 392.0], [25.0, 396.0], [25.1, 397.0], [25.2, 399.0], [25.3, 401.0], [25.4, 402.0], [25.5, 402.0], [25.6, 403.0], [25.7, 405.0], [25.8, 407.0], [25.9, 409.0], [26.0, 410.0], [26.1, 411.0], [26.2, 413.0], [26.3, 413.0], [26.4, 415.0], [26.5, 416.0], [26.6, 416.0], [26.7, 417.0], [26.8, 417.0], [26.9, 418.0], [27.0, 419.0], [27.1, 419.0], [27.2, 419.0], [27.3, 420.0], [27.4, 420.0], [27.5, 421.0], [27.6, 423.0], [27.7, 424.0], [27.8, 429.0], [27.9, 431.0], [28.0, 433.0], [28.1, 434.0], [28.2, 435.0], [28.3, 438.0], [28.4, 441.0], [28.5, 441.0], [28.6, 441.0], [28.7, 443.0], [28.8, 445.0], [28.9, 447.0], [29.0, 448.0], [29.1, 449.0], [29.2, 450.0], [29.3, 451.0], [29.4, 453.0], [29.5, 454.0], [29.6, 456.0], [29.7, 456.0], [29.8, 458.0], [29.9, 459.0], [30.0, 460.0], [30.1, 462.0], [30.2, 464.0], [30.3, 464.0], [30.4, 466.0], [30.5, 466.0], [30.6, 468.0], [30.7, 471.0], [30.8, 474.0], [30.9, 475.0], [31.0, 479.0], [31.1, 480.0], [31.2, 483.0], [31.3, 484.0], [31.4, 487.0], [31.5, 490.0], [31.6, 492.0], [31.7, 493.0], [31.8, 493.0], [31.9, 495.0], [32.0, 497.0], [32.1, 498.0], [32.2, 499.0], [32.3, 500.0], [32.4, 503.0], [32.5, 507.0], [32.6, 507.0], [32.7, 508.0], [32.8, 511.0], [32.9, 511.0], [33.0, 512.0], [33.1, 513.0], [33.2, 515.0], [33.3, 516.0], [33.4, 516.0], [33.5, 518.0], [33.6, 519.0], [33.7, 520.0], [33.8, 522.0], [33.9, 522.0], [34.0, 523.0], [34.1, 526.0], [34.2, 527.0], [34.3, 530.0], [34.4, 531.0], [34.5, 531.0], [34.6, 533.0], [34.7, 536.0], [34.8, 536.0], [34.9, 536.0], [35.0, 538.0], [35.1, 539.0], [35.2, 539.0], [35.3, 540.0], [35.4, 541.0], [35.5, 541.0], [35.6, 541.0], [35.7, 543.0], [35.8, 545.0], [35.9, 546.0], [36.0, 547.0], [36.1, 548.0], [36.2, 549.0], [36.3, 551.0], [36.4, 552.0], [36.5, 553.0], [36.6, 554.0], [36.7, 556.0], [36.8, 557.0], [36.9, 558.0], [37.0, 558.0], [37.1, 564.0], [37.2, 565.0], [37.3, 565.0], [37.4, 567.0], [37.5, 567.0], [37.6, 570.0], [37.7, 570.0], [37.8, 571.0], [37.9, 572.0], [38.0, 572.0], [38.1, 574.0], [38.2, 575.0], [38.3, 576.0], [38.4, 577.0], [38.5, 578.0], [38.6, 580.0], [38.7, 581.0], [38.8, 582.0], [38.9, 583.0], [39.0, 584.0], [39.1, 585.0], [39.2, 586.0], [39.3, 587.0], [39.4, 588.0], [39.5, 590.0], [39.6, 591.0], [39.7, 593.0], [39.8, 596.0], [39.9, 598.0], [40.0, 599.0], [40.1, 599.0], [40.2, 599.0], [40.3, 600.0], [40.4, 601.0], [40.5, 603.0], [40.6, 603.0], [40.7, 604.0], [40.8, 606.0], [40.9, 607.0], [41.0, 609.0], [41.1, 611.0], [41.2, 611.0], [41.3, 612.0], [41.4, 614.0], [41.5, 615.0], [41.6, 616.0], [41.7, 617.0], [41.8, 622.0], [41.9, 623.0], [42.0, 623.0], [42.1, 624.0], [42.2, 625.0], [42.3, 627.0], [42.4, 628.0], [42.5, 629.0], [42.6, 629.0], [42.7, 630.0], [42.8, 631.0], [42.9, 632.0], [43.0, 633.0], [43.1, 633.0], [43.2, 634.0], [43.3, 634.0], [43.4, 635.0], [43.5, 636.0], [43.6, 636.0], [43.7, 637.0], [43.8, 637.0], [43.9, 639.0], [44.0, 645.0], [44.1, 647.0], [44.2, 647.0], [44.3, 651.0], [44.4, 652.0], [44.5, 652.0], [44.6, 653.0], [44.7, 653.0], [44.8, 655.0], [44.9, 656.0], [45.0, 659.0], [45.1, 660.0], [45.2, 663.0], [45.3, 665.0], [45.4, 665.0], [45.5, 666.0], [45.6, 668.0], [45.7, 669.0], [45.8, 669.0], [45.9, 671.0], [46.0, 672.0], [46.1, 674.0], [46.2, 676.0], [46.3, 677.0], [46.4, 677.0], [46.5, 678.0], [46.6, 678.0], [46.7, 680.0], [46.8, 681.0], [46.9, 681.0], [47.0, 682.0], [47.1, 683.0], [47.2, 686.0], [47.3, 687.0], [47.4, 688.0], [47.5, 688.0], [47.6, 689.0], [47.7, 690.0], [47.8, 691.0], [47.9, 692.0], [48.0, 693.0], [48.1, 694.0], [48.2, 695.0], [48.3, 695.0], [48.4, 695.0], [48.5, 697.0], [48.6, 698.0], [48.7, 699.0], [48.8, 701.0], [48.9, 701.0], [49.0, 702.0], [49.1, 703.0], [49.2, 706.0], [49.3, 708.0], [49.4, 709.0], [49.5, 709.0], [49.6, 712.0], [49.7, 713.0], [49.8, 714.0], [49.9, 714.0], [50.0, 715.0], [50.1, 715.0], [50.2, 716.0], [50.3, 718.0], [50.4, 720.0], [50.5, 722.0], [50.6, 723.0], [50.7, 725.0], [50.8, 726.0], [50.9, 728.0], [51.0, 731.0], [51.1, 732.0], [51.2, 733.0], [51.3, 736.0], [51.4, 736.0], [51.5, 737.0], [51.6, 737.0], [51.7, 738.0], [51.8, 746.0], [51.9, 750.0], [52.0, 750.0], [52.1, 751.0], [52.2, 752.0], [52.3, 755.0], [52.4, 757.0], [52.5, 758.0], [52.6, 760.0], [52.7, 761.0], [52.8, 762.0], [52.9, 764.0], [53.0, 764.0], [53.1, 765.0], [53.2, 765.0], [53.3, 766.0], [53.4, 769.0], [53.5, 770.0], [53.6, 770.0], [53.7, 773.0], [53.8, 777.0], [53.9, 780.0], [54.0, 784.0], [54.1, 786.0], [54.2, 786.0], [54.3, 790.0], [54.4, 792.0], [54.5, 793.0], [54.6, 794.0], [54.7, 795.0], [54.8, 795.0], [54.9, 796.0], [55.0, 798.0], [55.1, 798.0], [55.2, 800.0], [55.3, 800.0], [55.4, 801.0], [55.5, 802.0], [55.6, 804.0], [55.7, 804.0], [55.8, 806.0], [55.9, 808.0], [56.0, 810.0], [56.1, 810.0], [56.2, 811.0], [56.3, 811.0], [56.4, 818.0], [56.5, 819.0], [56.6, 821.0], [56.7, 822.0], [56.8, 824.0], [56.9, 825.0], [57.0, 826.0], [57.1, 826.0], [57.2, 830.0], [57.3, 830.0], [57.4, 830.0], [57.5, 832.0], [57.6, 833.0], [57.7, 834.0], [57.8, 835.0], [57.9, 837.0], [58.0, 838.0], [58.1, 840.0], [58.2, 841.0], [58.3, 842.0], [58.4, 846.0], [58.5, 847.0], [58.6, 848.0], [58.7, 849.0], [58.8, 851.0], [58.9, 852.0], [59.0, 854.0], [59.1, 856.0], [59.2, 857.0], [59.3, 857.0], [59.4, 859.0], [59.5, 861.0], [59.6, 867.0], [59.7, 869.0], [59.8, 870.0], [59.9, 870.0], [60.0, 873.0], [60.1, 874.0], [60.2, 876.0], [60.3, 880.0], [60.4, 883.0], [60.5, 883.0], [60.6, 886.0], [60.7, 887.0], [60.8, 887.0], [60.9, 888.0], [61.0, 889.0], [61.1, 890.0], [61.2, 892.0], [61.3, 895.0], [61.4, 898.0], [61.5, 899.0], [61.6, 901.0], [61.7, 904.0], [61.8, 904.0], [61.9, 906.0], [62.0, 906.0], [62.1, 908.0], [62.2, 909.0], [62.3, 909.0], [62.4, 911.0], [62.5, 915.0], [62.6, 916.0], [62.7, 917.0], [62.8, 918.0], [62.9, 918.0], [63.0, 919.0], [63.1, 919.0], [63.2, 922.0], [63.3, 923.0], [63.4, 925.0], [63.5, 926.0], [63.6, 926.0], [63.7, 928.0], [63.8, 929.0], [63.9, 929.0], [64.0, 932.0], [64.1, 933.0], [64.2, 937.0], [64.3, 940.0], [64.4, 940.0], [64.5, 943.0], [64.6, 944.0], [64.7, 946.0], [64.8, 946.0], [64.9, 948.0], [65.0, 950.0], [65.1, 951.0], [65.2, 954.0], [65.3, 955.0], [65.4, 956.0], [65.5, 959.0], [65.6, 959.0], [65.7, 959.0], [65.8, 962.0], [65.9, 962.0], [66.0, 963.0], [66.1, 964.0], [66.2, 965.0], [66.3, 965.0], [66.4, 967.0], [66.5, 967.0], [66.6, 971.0], [66.7, 971.0], [66.8, 972.0], [66.9, 973.0], [67.0, 973.0], [67.1, 975.0], [67.2, 975.0], [67.3, 977.0], [67.4, 980.0], [67.5, 980.0], [67.6, 981.0], [67.7, 982.0], [67.8, 983.0], [67.9, 983.0], [68.0, 983.0], [68.1, 985.0], [68.2, 988.0], [68.3, 989.0], [68.4, 991.0], [68.5, 993.0], [68.6, 994.0], [68.7, 998.0], [68.8, 1000.0], [68.9, 1002.0], [69.0, 1005.0], [69.1, 1006.0], [69.2, 1008.0], [69.3, 1009.0], [69.4, 1009.0], [69.5, 1010.0], [69.6, 1010.0], [69.7, 1011.0], [69.8, 1012.0], [69.9, 1016.0], [70.0, 1017.0], [70.1, 1017.0], [70.2, 1017.0], [70.3, 1018.0], [70.4, 1019.0], [70.5, 1021.0], [70.6, 1024.0], [70.7, 1024.0], [70.8, 1025.0], [70.9, 1025.0], [71.0, 1026.0], [71.1, 1028.0], [71.2, 1029.0], [71.3, 1031.0], [71.4, 1031.0], [71.5, 1032.0], [71.6, 1036.0], [71.7, 1037.0], [71.8, 1038.0], [71.9, 1038.0], [72.0, 1038.0], [72.1, 1039.0], [72.2, 1043.0], [72.3, 1043.0], [72.4, 1043.0], [72.5, 1045.0], [72.6, 1045.0], [72.7, 1046.0], [72.8, 1048.0], [72.9, 1049.0], [73.0, 1051.0], [73.1, 1053.0], [73.2, 1056.0], [73.3, 1057.0], [73.4, 1057.0], [73.5, 1058.0], [73.6, 1060.0], [73.7, 1061.0], [73.8, 1062.0], [73.9, 1063.0], [74.0, 1064.0], [74.1, 1064.0], [74.2, 1065.0], [74.3, 1066.0], [74.4, 1068.0], [74.5, 1069.0], [74.6, 1071.0], [74.7, 1072.0], [74.8, 1075.0], [74.9, 1076.0], [75.0, 1076.0], [75.1, 1076.0], [75.2, 1077.0], [75.3, 1082.0], [75.4, 1083.0], [75.5, 1086.0], [75.6, 1086.0], [75.7, 1086.0], [75.8, 1088.0], [75.9, 1089.0], [76.0, 1092.0], [76.1, 1095.0], [76.2, 1095.0], [76.3, 1099.0], [76.4, 1102.0], [76.5, 1103.0], [76.6, 1104.0], [76.7, 1106.0], [76.8, 1107.0], [76.9, 1108.0], [77.0, 1109.0], [77.1, 1109.0], [77.2, 1111.0], [77.3, 1114.0], [77.4, 1115.0], [77.5, 1118.0], [77.6, 1118.0], [77.7, 1118.0], [77.8, 1121.0], [77.9, 1124.0], [78.0, 1125.0], [78.1, 1126.0], [78.2, 1127.0], [78.3, 1128.0], [78.4, 1128.0], [78.5, 1131.0], [78.6, 1134.0], [78.7, 1135.0], [78.8, 1136.0], [78.9, 1137.0], [79.0, 1142.0], [79.1, 1143.0], [79.2, 1144.0], [79.3, 1145.0], [79.4, 1145.0], [79.5, 1145.0], [79.6, 1147.0], [79.7, 1147.0], [79.8, 1149.0], [79.9, 1150.0], [80.0, 1151.0], [80.1, 1151.0], [80.2, 1152.0], [80.3, 1152.0], [80.4, 1154.0], [80.5, 1157.0], [80.6, 1158.0], [80.7, 1161.0], [80.8, 1162.0], [80.9, 1165.0], [81.0, 1169.0], [81.1, 1171.0], [81.2, 1172.0], [81.3, 1175.0], [81.4, 1176.0], [81.5, 1177.0], [81.6, 1179.0], [81.7, 1181.0], [81.8, 1182.0], [81.9, 1184.0], [82.0, 1185.0], [82.1, 1187.0], [82.2, 1189.0], [82.3, 1190.0], [82.4, 1195.0], [82.5, 1195.0], [82.6, 1196.0], [82.7, 1199.0], [82.8, 1202.0], [82.9, 1202.0], [83.0, 1207.0], [83.1, 1209.0], [83.2, 1210.0], [83.3, 1211.0], [83.4, 1215.0], [83.5, 1217.0], [83.6, 1218.0], [83.7, 1218.0], [83.8, 1220.0], [83.9, 1222.0], [84.0, 1226.0], [84.1, 1227.0], [84.2, 1228.0], [84.3, 1232.0], [84.4, 1232.0], [84.5, 1235.0], [84.6, 1236.0], [84.7, 1239.0], [84.8, 1242.0], [84.9, 1243.0], [85.0, 1244.0], [85.1, 1249.0], [85.2, 1250.0], [85.3, 1253.0], [85.4, 1257.0], [85.5, 1259.0], [85.6, 1262.0], [85.7, 1266.0], [85.8, 1268.0], [85.9, 1272.0], [86.0, 1272.0], [86.1, 1275.0], [86.2, 1277.0], [86.3, 1277.0], [86.4, 1278.0], [86.5, 1278.0], [86.6, 1279.0], [86.7, 1279.0], [86.8, 1282.0], [86.9, 1288.0], [87.0, 1289.0], [87.1, 1293.0], [87.2, 1293.0], [87.3, 1298.0], [87.4, 1299.0], [87.5, 1301.0], [87.6, 1305.0], [87.7, 1309.0], [87.8, 1315.0], [87.9, 1317.0], [88.0, 1317.0], [88.1, 1318.0], [88.2, 1324.0], [88.3, 1327.0], [88.4, 1327.0], [88.5, 1330.0], [88.6, 1333.0], [88.7, 1333.0], [88.8, 1335.0], [88.9, 1340.0], [89.0, 1342.0], [89.1, 1342.0], [89.2, 1346.0], [89.3, 1351.0], [89.4, 1354.0], [89.5, 1354.0], [89.6, 1356.0], [89.7, 1359.0], [89.8, 1362.0], [89.9, 1363.0], [90.0, 1373.0], [90.1, 1375.0], [90.2, 1376.0], [90.3, 1379.0], [90.4, 1383.0], [90.5, 1386.0], [90.6, 1387.0], [90.7, 1387.0], [90.8, 1388.0], [90.9, 1390.0], [91.0, 1391.0], [91.1, 1393.0], [91.2, 1393.0], [91.3, 1400.0], [91.4, 1404.0], [91.5, 1411.0], [91.6, 1414.0], [91.7, 1415.0], [91.8, 1418.0], [91.9, 1421.0], [92.0, 1422.0], [92.1, 1424.0], [92.2, 1425.0], [92.3, 1428.0], [92.4, 1430.0], [92.5, 1431.0], [92.6, 1433.0], [92.7, 1439.0], [92.8, 1441.0], [92.9, 1445.0], [93.0, 1449.0], [93.1, 1454.0], [93.2, 1460.0], [93.3, 1461.0], [93.4, 1466.0], [93.5, 1468.0], [93.6, 1476.0], [93.7, 1482.0], [93.8, 1482.0], [93.9, 1486.0], [94.0, 1488.0], [94.1, 1494.0], [94.2, 1496.0], [94.3, 1498.0], [94.4, 1500.0], [94.5, 1501.0], [94.6, 1502.0], [94.7, 1504.0], [94.8, 1507.0], [94.9, 1512.0], [95.0, 1514.0], [95.1, 1523.0], [95.2, 1529.0], [95.3, 1531.0], [95.4, 1535.0], [95.5, 1539.0], [95.6, 1542.0], [95.7, 1544.0], [95.8, 1548.0], [95.9, 1556.0], [96.0, 1562.0], [96.1, 1567.0], [96.2, 1568.0], [96.3, 1572.0], [96.4, 1572.0], [96.5, 1573.0], [96.6, 1577.0], [96.7, 1581.0], [96.8, 1590.0], [96.9, 1597.0], [97.0, 1604.0], [97.1, 1611.0], [97.2, 1618.0], [97.3, 1621.0], [97.4, 1623.0], [97.5, 1627.0], [97.6, 1632.0], [97.7, 1636.0], [97.8, 1645.0], [97.9, 1663.0], [98.0, 1673.0], [98.1, 1680.0], [98.2, 1691.0], [98.3, 1701.0], [98.4, 1707.0], [98.5, 1708.0], [98.6, 1711.0], [98.7, 1713.0], [98.8, 1733.0], [98.9, 1736.0], [99.0, 1746.0], [99.1, 1768.0], [99.2, 1812.0], [99.3, 1820.0], [99.4, 1827.0], [99.5, 1838.0], [99.6, 1853.0], [99.7, 1859.0], [99.8, 1880.0], [99.9, 1890.0]], "isOverall": false, "label": "50 users", "isController": false}, {"data": [[0.0, 122.0], [0.1, 122.0], [0.2, 152.0], [0.3, 154.0], [0.4, 159.0], [0.5, 163.0], [0.6, 174.0], [0.7, 177.0], [0.8, 178.0], [0.9, 181.0], [1.0, 182.0], [1.1, 187.0], [1.2, 189.0], [1.3, 197.0], [1.4, 198.0], [1.5, 200.0], [1.6, 207.0], [1.7, 208.0], [1.8, 213.0], [1.9, 213.0], [2.0, 218.0], [2.1, 222.0], [2.2, 226.0], [2.3, 226.0], [2.4, 229.0], [2.5, 231.0], [2.6, 234.0], [2.7, 239.0], [2.8, 241.0], [2.9, 247.0], [3.0, 247.0], [3.1, 256.0], [3.2, 258.0], [3.3, 259.0], [3.4, 263.0], [3.5, 269.0], [3.6, 276.0], [3.7, 277.0], [3.8, 283.0], [3.9, 287.0], [4.0, 296.0], [4.1, 303.0], [4.2, 305.0], [4.3, 305.0], [4.4, 310.0], [4.5, 318.0], [4.6, 321.0], [4.7, 323.0], [4.8, 326.0], [4.9, 327.0], [5.0, 331.0], [5.1, 335.0], [5.2, 344.0], [5.3, 344.0], [5.4, 351.0], [5.5, 352.0], [5.6, 360.0], [5.7, 361.0], [5.8, 363.0], [5.9, 368.0], [6.0, 376.0], [6.1, 385.0], [6.2, 390.0], [6.3, 396.0], [6.4, 398.0], [6.5, 400.0], [6.6, 401.0], [6.7, 409.0], [6.8, 416.0], [6.9, 439.0], [7.0, 449.0], [7.1, 454.0], [7.2, 462.0], [7.3, 462.0], [7.4, 465.0], [7.5, 467.0], [7.6, 471.0], [7.7, 471.0], [7.8, 474.0], [7.9, 482.0], [8.0, 486.0], [8.1, 492.0], [8.2, 494.0], [8.3, 498.0], [8.4, 499.0], [8.5, 507.0], [8.6, 508.0], [8.7, 514.0], [8.8, 521.0], [8.9, 523.0], [9.0, 525.0], [9.1, 525.0], [9.2, 541.0], [9.3, 542.0], [9.4, 548.0], [9.5, 550.0], [9.6, 554.0], [9.7, 567.0], [9.8, 568.0], [9.9, 571.0], [10.0, 575.0], [10.1, 581.0], [10.2, 581.0], [10.3, 585.0], [10.4, 588.0], [10.5, 588.0], [10.6, 592.0], [10.7, 593.0], [10.8, 600.0], [10.9, 609.0], [11.0, 621.0], [11.1, 622.0], [11.2, 624.0], [11.3, 631.0], [11.4, 633.0], [11.5, 635.0], [11.6, 636.0], [11.7, 640.0], [11.8, 649.0], [11.9, 661.0], [12.0, 663.0], [12.1, 668.0], [12.2, 672.0], [12.3, 678.0], [12.4, 690.0], [12.5, 694.0], [12.6, 703.0], [12.7, 703.0], [12.8, 710.0], [12.9, 730.0], [13.0, 737.0], [13.1, 745.0], [13.2, 746.0], [13.3, 751.0], [13.4, 767.0], [13.5, 776.0], [13.6, 776.0], [13.7, 786.0], [13.8, 789.0], [13.9, 802.0], [14.0, 810.0], [14.1, 811.0], [14.2, 818.0], [14.3, 821.0], [14.4, 849.0], [14.5, 860.0], [14.6, 888.0], [14.7, 900.0], [14.8, 907.0], [14.9, 912.0], [15.0, 916.0], [15.1, 920.0], [15.2, 922.0], [15.3, 930.0], [15.4, 952.0], [15.5, 969.0], [15.6, 994.0], [15.7, 996.0], [15.8, 1002.0], [15.9, 1004.0], [16.0, 1012.0], [16.1, 1013.0], [16.2, 1023.0], [16.3, 1031.0], [16.4, 1038.0], [16.5, 1041.0], [16.6, 1046.0], [16.7, 1067.0], [16.8, 1071.0], [16.9, 1080.0], [17.0, 1080.0], [17.1, 1098.0], [17.2, 1104.0], [17.3, 1117.0], [17.4, 1122.0], [17.5, 1123.0], [17.6, 1126.0], [17.7, 1127.0], [17.8, 1129.0], [17.9, 1136.0], [18.0, 1141.0], [18.1, 1142.0], [18.2, 1149.0], [18.3, 1153.0], [18.4, 1157.0], [18.5, 1167.0], [18.6, 1167.0], [18.7, 1173.0], [18.8, 1182.0], [18.9, 1185.0], [19.0, 1189.0], [19.1, 1189.0], [19.2, 1204.0], [19.3, 1206.0], [19.4, 1210.0], [19.5, 1215.0], [19.6, 1226.0], [19.7, 1227.0], [19.8, 1228.0], [19.9, 1230.0], [20.0, 1230.0], [20.1, 1235.0], [20.2, 1235.0], [20.3, 1237.0], [20.4, 1238.0], [20.5, 1241.0], [20.6, 1248.0], [20.7, 1258.0], [20.8, 1260.0], [20.9, 1261.0], [21.0, 1266.0], [21.1, 1276.0], [21.2, 1280.0], [21.3, 1281.0], [21.4, 1286.0], [21.5, 1290.0], [21.6, 1312.0], [21.7, 1319.0], [21.8, 1322.0], [21.9, 1337.0], [22.0, 1339.0], [22.1, 1368.0], [22.2, 1368.0], [22.3, 1372.0], [22.4, 1372.0], [22.5, 1376.0], [22.6, 1389.0], [22.7, 1407.0], [22.8, 1411.0], [22.9, 1413.0], [23.0, 1424.0], [23.1, 1427.0], [23.2, 1433.0], [23.3, 1439.0], [23.4, 1446.0], [23.5, 1454.0], [23.6, 1461.0], [23.7, 1485.0], [23.8, 1510.0], [23.9, 1525.0], [24.0, 1527.0], [24.1, 1533.0], [24.2, 1557.0], [24.3, 1562.0], [24.4, 1562.0], [24.5, 1566.0], [24.6, 1575.0], [24.7, 1577.0], [24.8, 1584.0], [24.9, 1586.0], [25.0, 1590.0], [25.1, 1593.0], [25.2, 1596.0], [25.3, 1598.0], [25.4, 1606.0], [25.5, 1617.0], [25.6, 1618.0], [25.7, 1627.0], [25.8, 1630.0], [25.9, 1658.0], [26.0, 1663.0], [26.1, 1668.0], [26.2, 1683.0], [26.3, 1700.0], [26.4, 1702.0], [26.5, 1703.0], [26.6, 1708.0], [26.7, 1711.0], [26.8, 1722.0], [26.9, 1727.0], [27.0, 1731.0], [27.1, 1745.0], [27.2, 1747.0], [27.3, 1751.0], [27.4, 1758.0], [27.5, 1765.0], [27.6, 1767.0], [27.7, 1769.0], [27.8, 1772.0], [27.9, 1773.0], [28.0, 1776.0], [28.1, 1779.0], [28.2, 1788.0], [28.3, 1789.0], [28.4, 1798.0], [28.5, 1807.0], [28.6, 1807.0], [28.7, 1810.0], [28.8, 1811.0], [28.9, 1814.0], [29.0, 1815.0], [29.1, 1829.0], [29.2, 1831.0], [29.3, 1848.0], [29.4, 1855.0], [29.5, 1864.0], [29.6, 1865.0], [29.7, 1866.0], [29.8, 1883.0], [29.9, 1892.0], [30.0, 1899.0], [30.1, 1913.0], [30.2, 1925.0], [30.3, 1931.0], [30.4, 1939.0], [30.5, 1950.0], [30.6, 1952.0], [30.7, 1959.0], [30.8, 1959.0], [30.9, 1963.0], [31.0, 1966.0], [31.1, 1974.0], [31.2, 1975.0], [31.3, 1981.0], [31.4, 2001.0], [31.5, 2026.0], [31.6, 2041.0], [31.7, 2052.0], [31.8, 2060.0], [31.9, 2062.0], [32.0, 2064.0], [32.1, 2079.0], [32.2, 2081.0], [32.3, 2095.0], [32.4, 2096.0], [32.5, 2107.0], [32.6, 2110.0], [32.7, 2129.0], [32.8, 2133.0], [32.9, 2136.0], [33.0, 2141.0], [33.1, 2154.0], [33.2, 2160.0], [33.3, 2163.0], [33.4, 2169.0], [33.5, 2189.0], [33.6, 2198.0], [33.7, 2202.0], [33.8, 2202.0], [33.9, 2211.0], [34.0, 2215.0], [34.1, 2220.0], [34.2, 2230.0], [34.3, 2245.0], [34.4, 2252.0], [34.5, 2255.0], [34.6, 2258.0], [34.7, 2272.0], [34.8, 2275.0], [34.9, 2279.0], [35.0, 2294.0], [35.1, 2304.0], [35.2, 2312.0], [35.3, 2324.0], [35.4, 2348.0], [35.5, 2352.0], [35.6, 2360.0], [35.7, 2361.0], [35.8, 2364.0], [35.9, 2385.0], [36.0, 2393.0], [36.1, 2406.0], [36.2, 2420.0], [36.3, 2430.0], [36.4, 2457.0], [36.5, 2459.0], [36.6, 2462.0], [36.7, 2471.0], [36.8, 2492.0], [36.9, 2502.0], [37.0, 2515.0], [37.1, 2544.0], [37.2, 2547.0], [37.3, 2562.0], [37.4, 2562.0], [37.5, 2570.0], [37.6, 2583.0], [37.7, 2584.0], [37.8, 2584.0], [37.9, 2596.0], [38.0, 2614.0], [38.1, 2632.0], [38.2, 2636.0], [38.3, 2637.0], [38.4, 2649.0], [38.5, 2658.0], [38.6, 2677.0], [38.7, 2680.0], [38.8, 2689.0], [38.9, 2699.0], [39.0, 2718.0], [39.1, 2735.0], [39.2, 2738.0], [39.3, 2752.0], [39.4, 2756.0], [39.5, 2758.0], [39.6, 2760.0], [39.7, 2775.0], [39.8, 2777.0], [39.9, 2781.0], [40.0, 2792.0], [40.1, 2797.0], [40.2, 2808.0], [40.3, 2814.0], [40.4, 2818.0], [40.5, 2821.0], [40.6, 2824.0], [40.7, 2836.0], [40.8, 2845.0], [40.9, 2859.0], [41.0, 2878.0], [41.1, 2883.0], [41.2, 2887.0], [41.3, 2909.0], [41.4, 2913.0], [41.5, 2915.0], [41.6, 2928.0], [41.7, 2954.0], [41.8, 2961.0], [41.9, 2963.0], [42.0, 2971.0], [42.1, 2981.0], [42.2, 2985.0], [42.3, 2990.0], [42.4, 2994.0], [42.5, 3015.0], [42.6, 3016.0], [42.7, 3018.0], [42.8, 3025.0], [42.9, 3032.0], [43.0, 3034.0], [43.1, 3046.0], [43.2, 3055.0], [43.3, 3063.0], [43.4, 3075.0], [43.5, 3076.0], [43.6, 3083.0], [43.7, 3118.0], [43.8, 3141.0], [43.9, 3147.0], [44.0, 3150.0], [44.1, 3165.0], [44.2, 3167.0], [44.3, 3168.0], [44.4, 3172.0], [44.5, 3206.0], [44.6, 3209.0], [44.7, 3220.0], [44.8, 3221.0], [44.9, 3227.0], [45.0, 3247.0], [45.1, 3247.0], [45.2, 3251.0], [45.3, 3253.0], [45.4, 3261.0], [45.5, 3268.0], [45.6, 3271.0], [45.7, 3289.0], [45.8, 3290.0], [45.9, 3294.0], [46.0, 3296.0], [46.1, 3305.0], [46.2, 3314.0], [46.3, 3315.0], [46.4, 3316.0], [46.5, 3317.0], [46.6, 3318.0], [46.7, 3319.0], [46.8, 3323.0], [46.9, 3328.0], [47.0, 3341.0], [47.1, 3345.0], [47.2, 3349.0], [47.3, 3350.0], [47.4, 3351.0], [47.5, 3360.0], [47.6, 3365.0], [47.7, 3366.0], [47.8, 3370.0], [47.9, 3376.0], [48.0, 3381.0], [48.1, 3391.0], [48.2, 3393.0], [48.3, 3407.0], [48.4, 3414.0], [48.5, 3439.0], [48.6, 3442.0], [48.7, 3443.0], [48.8, 3461.0], [48.9, 3473.0], [49.0, 3509.0], [49.1, 3520.0], [49.2, 3529.0], [49.3, 3533.0], [49.4, 3533.0], [49.5, 3535.0], [49.6, 3535.0], [49.7, 3546.0], [49.8, 3553.0], [49.9, 3565.0], [50.0, 3582.0], [50.1, 3585.0], [50.2, 3591.0], [50.3, 3614.0], [50.4, 3623.0], [50.5, 3625.0], [50.6, 3630.0], [50.7, 3637.0], [50.8, 3641.0], [50.9, 3647.0], [51.0, 3653.0], [51.1, 3657.0], [51.2, 3657.0], [51.3, 3663.0], [51.4, 3666.0], [51.5, 3682.0], [51.6, 3688.0], [51.7, 3696.0], [51.8, 3708.0], [51.9, 3711.0], [52.0, 3727.0], [52.1, 3729.0], [52.2, 3740.0], [52.3, 3740.0], [52.4, 3745.0], [52.5, 3754.0], [52.6, 3756.0], [52.7, 3760.0], [52.8, 3762.0], [52.9, 3783.0], [53.0, 3787.0], [53.1, 3789.0], [53.2, 3790.0], [53.3, 3800.0], [53.4, 3800.0], [53.5, 3826.0], [53.6, 3828.0], [53.7, 3833.0], [53.8, 3841.0], [53.9, 3843.0], [54.0, 3857.0], [54.1, 3868.0], [54.2, 3871.0], [54.3, 3872.0], [54.4, 3874.0], [54.5, 3897.0], [54.6, 3900.0], [54.7, 3909.0], [54.8, 3909.0], [54.9, 3919.0], [55.0, 3920.0], [55.1, 3928.0], [55.2, 3930.0], [55.3, 3931.0], [55.4, 3936.0], [55.5, 3936.0], [55.6, 3945.0], [55.7, 3951.0], [55.8, 3952.0], [55.9, 3953.0], [56.0, 3964.0], [56.1, 3970.0], [56.2, 3976.0], [56.3, 3984.0], [56.4, 3984.0], [56.5, 3990.0], [56.6, 3998.0], [56.7, 4004.0], [56.8, 4009.0], [56.9, 4016.0], [57.0, 4022.0], [57.1, 4024.0], [57.2, 4042.0], [57.3, 4044.0], [57.4, 4051.0], [57.5, 4056.0], [57.6, 4059.0], [57.7, 4063.0], [57.8, 4075.0], [57.9, 4077.0], [58.0, 4078.0], [58.1, 4087.0], [58.2, 4094.0], [58.3, 4100.0], [58.4, 4107.0], [58.5, 4113.0], [58.6, 4117.0], [58.7, 4126.0], [58.8, 4133.0], [58.9, 4136.0], [59.0, 4145.0], [59.1, 4151.0], [59.2, 4156.0], [59.3, 4162.0], [59.4, 4166.0], [59.5, 4177.0], [59.6, 4188.0], [59.7, 4197.0], [59.8, 4211.0], [59.9, 4214.0], [60.0, 4215.0], [60.1, 4222.0], [60.2, 4229.0], [60.3, 4237.0], [60.4, 4250.0], [60.5, 4256.0], [60.6, 4258.0], [60.7, 4259.0], [60.8, 4259.0], [60.9, 4282.0], [61.0, 4293.0], [61.1, 4294.0], [61.2, 4301.0], [61.3, 4313.0], [61.4, 4323.0], [61.5, 4327.0], [61.6, 4330.0], [61.7, 4337.0], [61.8, 4337.0], [61.9, 4347.0], [62.0, 4348.0], [62.1, 4351.0], [62.2, 4354.0], [62.3, 4358.0], [62.4, 4367.0], [62.5, 4368.0], [62.6, 4370.0], [62.7, 4373.0], [62.8, 4378.0], [62.9, 4382.0], [63.0, 4399.0], [63.1, 4414.0], [63.2, 4428.0], [63.3, 4437.0], [63.4, 4447.0], [63.5, 4458.0], [63.6, 4460.0], [63.7, 4482.0], [63.8, 4501.0], [63.9, 4503.0], [64.0, 4508.0], [64.1, 4513.0], [64.2, 4520.0], [64.3, 4541.0], [64.4, 4546.0], [64.5, 4556.0], [64.6, 4567.0], [64.7, 4571.0], [64.8, 4572.0], [64.9, 4576.0], [65.0, 4577.0], [65.1, 4584.0], [65.2, 4585.0], [65.3, 4588.0], [65.4, 4594.0], [65.5, 4598.0], [65.6, 4604.0], [65.7, 4608.0], [65.8, 4608.0], [65.9, 4618.0], [66.0, 4638.0], [66.1, 4639.0], [66.2, 4654.0], [66.3, 4656.0], [66.4, 4674.0], [66.5, 4684.0], [66.6, 4687.0], [66.7, 4690.0], [66.8, 4693.0], [66.9, 4698.0], [67.0, 4700.0], [67.1, 4717.0], [67.2, 4728.0], [67.3, 4750.0], [67.4, 4752.0], [67.5, 4759.0], [67.6, 4773.0], [67.7, 4782.0], [67.8, 4785.0], [67.9, 4786.0], [68.0, 4792.0], [68.1, 4794.0], [68.2, 4809.0], [68.3, 4814.0], [68.4, 4815.0], [68.5, 4818.0], [68.6, 4820.0], [68.7, 4839.0], [68.8, 4842.0], [68.9, 4847.0], [69.0, 4851.0], [69.1, 4857.0], [69.2, 4860.0], [69.3, 4863.0], [69.4, 4878.0], [69.5, 4891.0], [69.6, 4899.0], [69.7, 4913.0], [69.8, 4913.0], [69.9, 4924.0], [70.0, 4926.0], [70.1, 4932.0], [70.2, 4933.0], [70.3, 4933.0], [70.4, 4935.0], [70.5, 4947.0], [70.6, 4948.0], [70.7, 4949.0], [70.8, 4953.0], [70.9, 4958.0], [71.0, 4966.0], [71.1, 4972.0], [71.2, 4976.0], [71.3, 4976.0], [71.4, 4984.0], [71.5, 4985.0], [71.6, 5002.0], [71.7, 5006.0], [71.8, 5014.0], [71.9, 5017.0], [72.0, 5026.0], [72.1, 5033.0], [72.2, 5036.0], [72.3, 5043.0], [72.4, 5066.0], [72.5, 5075.0], [72.6, 5078.0], [72.7, 5084.0], [72.8, 5090.0], [72.9, 5095.0], [73.0, 5110.0], [73.1, 5143.0], [73.2, 5151.0], [73.3, 5167.0], [73.4, 5177.0], [73.5, 5187.0], [73.6, 5188.0], [73.7, 5196.0], [73.8, 5196.0], [73.9, 5203.0], [74.0, 5206.0], [74.1, 5211.0], [74.2, 5220.0], [74.3, 5237.0], [74.4, 5240.0], [74.5, 5241.0], [74.6, 5249.0], [74.7, 5251.0], [74.8, 5252.0], [74.9, 5258.0], [75.0, 5266.0], [75.1, 5273.0], [75.2, 5276.0], [75.3, 5308.0], [75.4, 5308.0], [75.5, 5320.0], [75.6, 5323.0], [75.7, 5327.0], [75.8, 5331.0], [75.9, 5334.0], [76.0, 5346.0], [76.1, 5348.0], [76.2, 5354.0], [76.3, 5358.0], [76.4, 5370.0], [76.5, 5384.0], [76.6, 5402.0], [76.7, 5409.0], [76.8, 5415.0], [76.9, 5419.0], [77.0, 5436.0], [77.1, 5445.0], [77.2, 5447.0], [77.3, 5449.0], [77.4, 5449.0], [77.5, 5463.0], [77.6, 5470.0], [77.7, 5472.0], [77.8, 5487.0], [77.9, 5500.0], [78.0, 5502.0], [78.1, 5510.0], [78.2, 5518.0], [78.3, 5522.0], [78.4, 5536.0], [78.5, 5548.0], [78.6, 5550.0], [78.7, 5560.0], [78.8, 5565.0], [78.9, 5569.0], [79.0, 5580.0], [79.1, 5588.0], [79.2, 5591.0], [79.3, 5600.0], [79.4, 5610.0], [79.5, 5622.0], [79.6, 5627.0], [79.7, 5646.0], [79.8, 5649.0], [79.9, 5654.0], [80.0, 5671.0], [80.1, 5671.0], [80.2, 5685.0], [80.3, 5734.0], [80.4, 5735.0], [80.5, 5736.0], [80.6, 5743.0], [80.7, 5758.0], [80.8, 5759.0], [80.9, 5777.0], [81.0, 5780.0], [81.1, 5784.0], [81.2, 5790.0], [81.3, 5794.0], [81.4, 5805.0], [81.5, 5810.0], [81.6, 5829.0], [81.7, 5834.0], [81.8, 5855.0], [81.9, 5861.0], [82.0, 5864.0], [82.1, 5868.0], [82.2, 5886.0], [82.3, 5900.0], [82.4, 5913.0], [82.5, 5923.0], [82.6, 5928.0], [82.7, 5940.0], [82.8, 5944.0], [82.9, 5953.0], [83.0, 5960.0], [83.1, 5974.0], [83.2, 5976.0], [83.3, 5977.0], [83.4, 6000.0], [83.5, 6002.0], [83.6, 6005.0], [83.7, 6023.0], [83.8, 6030.0], [83.9, 6035.0], [84.0, 6039.0], [84.1, 6040.0], [84.2, 6050.0], [84.3, 6057.0], [84.4, 6074.0], [84.5, 6078.0], [84.6, 6094.0], [84.7, 6095.0], [84.8, 6110.0], [84.9, 6113.0], [85.0, 6137.0], [85.1, 6142.0], [85.2, 6152.0], [85.3, 6160.0], [85.4, 6166.0], [85.5, 6198.0], [85.6, 6203.0], [85.7, 6205.0], [85.8, 6207.0], [85.9, 6232.0], [86.0, 6233.0], [86.1, 6247.0], [86.2, 6259.0], [86.3, 6309.0], [86.4, 6321.0], [86.5, 6327.0], [86.6, 6351.0], [86.7, 6358.0], [86.8, 6389.0], [86.9, 6392.0], [87.0, 6408.0], [87.1, 6423.0], [87.2, 6429.0], [87.3, 6442.0], [87.4, 6442.0], [87.5, 6445.0], [87.6, 6448.0], [87.7, 6456.0], [87.8, 6461.0], [87.9, 6470.0], [88.0, 6474.0], [88.1, 6492.0], [88.2, 6504.0], [88.3, 6505.0], [88.4, 6514.0], [88.5, 6516.0], [88.6, 6544.0], [88.7, 6567.0], [88.8, 6574.0], [88.9, 6585.0], [89.0, 6585.0], [89.1, 6591.0], [89.2, 6599.0], [89.3, 6617.0], [89.4, 6628.0], [89.5, 6643.0], [89.6, 6653.0], [89.7, 6661.0], [89.8, 6671.0], [89.9, 6680.0], [90.0, 6682.0], [90.1, 6687.0], [90.2, 6700.0], [90.3, 6712.0], [90.4, 6723.0], [90.5, 6731.0], [90.6, 6736.0], [90.7, 6745.0], [90.8, 6747.0], [90.9, 6754.0], [91.0, 6757.0], [91.1, 6776.0], [91.2, 6777.0], [91.3, 6788.0], [91.4, 6792.0], [91.5, 6794.0], [91.6, 6812.0], [91.7, 6821.0], [91.8, 6825.0], [91.9, 6831.0], [92.0, 6839.0], [92.1, 6840.0], [92.2, 6854.0], [92.3, 6861.0], [92.4, 6881.0], [92.5, 6888.0], [92.6, 6889.0], [92.7, 6894.0], [92.8, 6898.0], [92.9, 6908.0], [93.0, 6909.0], [93.1, 6910.0], [93.2, 6916.0], [93.3, 6921.0], [93.4, 6941.0], [93.5, 6944.0], [93.6, 6947.0], [93.7, 6949.0], [93.8, 6957.0], [93.9, 6964.0], [94.0, 6975.0], [94.1, 6982.0], [94.2, 6986.0], [94.3, 6990.0], [94.4, 6993.0], [94.5, 7010.0], [94.6, 7011.0], [94.7, 7019.0], [94.8, 7026.0], [94.9, 7033.0], [95.0, 7038.0], [95.1, 7038.0], [95.2, 7055.0], [95.3, 7058.0], [95.4, 7065.0], [95.5, 7080.0], [95.6, 7092.0], [95.7, 7104.0], [95.8, 7110.0], [95.9, 7115.0], [96.0, 7123.0], [96.1, 7134.0], [96.2, 7152.0], [96.3, 7169.0], [96.4, 7170.0], [96.5, 7181.0], [96.6, 7199.0], [96.7, 7203.0], [96.8, 7231.0], [96.9, 7231.0], [97.0, 7254.0], [97.1, 7260.0], [97.2, 7279.0], [97.3, 7284.0], [97.4, 7299.0], [97.5, 7343.0], [97.6, 7347.0], [97.7, 7372.0], [97.8, 7378.0], [97.9, 7397.0], [98.0, 7414.0], [98.1, 7435.0], [98.2, 7462.0], [98.3, 7480.0], [98.4, 7501.0], [98.5, 7515.0], [98.6, 7544.0], [98.7, 7552.0], [98.8, 7558.0], [98.9, 7567.0], [99.0, 7588.0], [99.1, 7603.0], [99.2, 7627.0], [99.3, 7645.0], [99.4, 7660.0], [99.5, 7676.0], [99.6, 7681.0], [99.7, 7806.0], [99.8, 7831.0], [99.9, 7884.0]], "isOverall": false, "label": "200 users", "isController": false}, {"data": [[0.0, 133.0], [0.1, 136.0], [0.2, 184.0], [0.3, 186.0], [0.4, 212.0], [0.5, 217.0], [0.6, 238.0], [0.7, 254.0], [0.8, 255.0], [0.9, 287.0], [1.0, 300.0], [1.1, 393.0], [1.2, 435.0], [1.3, 799.0], [1.4, 860.0], [1.5, 943.0], [1.6, 973.0], [1.7, 973.0], [1.8, 1051.0], [1.9, 1080.0], [2.0, 1153.0], [2.1, 1165.0], [2.2, 1166.0], [2.3, 1218.0], [2.4, 1221.0], [2.5, 1236.0], [2.6, 1269.0], [2.7, 1304.0], [2.8, 1319.0], [2.9, 1329.0], [3.0, 1351.0], [3.1, 1352.0], [3.2, 1360.0], [3.3, 1396.0], [3.4, 1410.0], [3.5, 1423.0], [3.6, 1429.0], [3.7, 1438.0], [3.8, 1458.0], [3.9, 1495.0], [4.0, 1496.0], [4.1, 1497.0], [4.2, 1536.0], [4.3, 1539.0], [4.4, 1564.0], [4.5, 1566.0], [4.6, 1622.0], [4.7, 1635.0], [4.8, 1639.0], [4.9, 1692.0], [5.0, 1701.0], [5.1, 1765.0], [5.2, 1768.0], [5.3, 1779.0], [5.4, 1789.0], [5.5, 1834.0], [5.6, 1870.0], [5.7, 1870.0], [5.8, 1984.0], [5.9, 1999.0], [6.0, 2057.0], [6.1, 2096.0], [6.2, 2096.0], [6.3, 2113.0], [6.4, 2127.0], [6.5, 2135.0], [6.6, 2140.0], [6.7, 2140.0], [6.8, 2151.0], [6.9, 2152.0], [7.0, 2156.0], [7.1, 2170.0], [7.2, 2178.0], [7.3, 2192.0], [7.4, 2197.0], [7.5, 2247.0], [7.6, 2252.0], [7.7, 2264.0], [7.8, 2275.0], [7.9, 2288.0], [8.0, 2290.0], [8.1, 2294.0], [8.2, 2298.0], [8.3, 2305.0], [8.4, 2320.0], [8.5, 2321.0], [8.6, 2329.0], [8.7, 2342.0], [8.8, 2343.0], [8.9, 2345.0], [9.0, 2349.0], [9.1, 2360.0], [9.2, 2363.0], [9.3, 2380.0], [9.4, 2389.0], [9.5, 2389.0], [9.6, 2399.0], [9.7, 2400.0], [9.8, 2408.0], [9.9, 2416.0], [10.0, 2421.0], [10.1, 2429.0], [10.2, 2440.0], [10.3, 2446.0], [10.4, 2447.0], [10.5, 2457.0], [10.6, 2458.0], [10.7, 2460.0], [10.8, 2462.0], [10.9, 2463.0], [11.0, 2465.0], [11.1, 2467.0], [11.2, 2480.0], [11.3, 2491.0], [11.4, 2499.0], [11.5, 2500.0], [11.6, 2512.0], [11.7, 2518.0], [11.8, 2519.0], [11.9, 2521.0], [12.0, 2536.0], [12.1, 2543.0], [12.2, 2549.0], [12.3, 2553.0], [12.4, 2563.0], [12.5, 2575.0], [12.6, 2575.0], [12.7, 2577.0], [12.8, 2581.0], [12.9, 2582.0], [13.0, 2599.0], [13.1, 2611.0], [13.2, 2614.0], [13.3, 2618.0], [13.4, 2621.0], [13.5, 2622.0], [13.6, 2623.0], [13.7, 2625.0], [13.8, 2628.0], [13.9, 2642.0], [14.0, 2642.0], [14.1, 2651.0], [14.2, 2655.0], [14.3, 2671.0], [14.4, 2675.0], [14.5, 2680.0], [14.6, 2688.0], [14.7, 2690.0], [14.8, 2697.0], [14.9, 2698.0], [15.0, 2704.0], [15.1, 2710.0], [15.2, 2715.0], [15.3, 2717.0], [15.4, 2727.0], [15.5, 2736.0], [15.6, 2737.0], [15.7, 2748.0], [15.8, 2760.0], [15.9, 2762.0], [16.0, 2797.0], [16.1, 2806.0], [16.2, 2818.0], [16.3, 2819.0], [16.4, 2821.0], [16.5, 2823.0], [16.6, 2827.0], [16.7, 2830.0], [16.8, 2839.0], [16.9, 2849.0], [17.0, 2861.0], [17.1, 2870.0], [17.2, 2874.0], [17.3, 2874.0], [17.4, 2877.0], [17.5, 2881.0], [17.6, 2885.0], [17.7, 2888.0], [17.8, 2889.0], [17.9, 2895.0], [18.0, 2898.0], [18.1, 2904.0], [18.2, 2909.0], [18.3, 2911.0], [18.4, 2913.0], [18.5, 2915.0], [18.6, 2922.0], [18.7, 2922.0], [18.8, 2923.0], [18.9, 2924.0], [19.0, 2926.0], [19.1, 2937.0], [19.2, 2945.0], [19.3, 2956.0], [19.4, 2961.0], [19.5, 2967.0], [19.6, 2975.0], [19.7, 2984.0], [19.8, 2985.0], [19.9, 2987.0], [20.0, 2992.0], [20.1, 2993.0], [20.2, 3001.0], [20.3, 3004.0], [20.4, 3006.0], [20.5, 3017.0], [20.6, 3024.0], [20.7, 3031.0], [20.8, 3033.0], [20.9, 3040.0], [21.0, 3046.0], [21.1, 3064.0], [21.2, 3081.0], [21.3, 3087.0], [21.4, 3090.0], [21.5, 3096.0], [21.6, 3114.0], [21.7, 3132.0], [21.8, 3133.0], [21.9, 3145.0], [22.0, 3148.0], [22.1, 3158.0], [22.2, 3162.0], [22.3, 3164.0], [22.4, 3169.0], [22.5, 3169.0], [22.6, 3184.0], [22.7, 3198.0], [22.8, 3204.0], [22.9, 3208.0], [23.0, 3226.0], [23.1, 3246.0], [23.2, 3251.0], [23.3, 3271.0], [23.4, 3272.0], [23.5, 3285.0], [23.6, 3290.0], [23.7, 3293.0], [23.8, 3310.0], [23.9, 3311.0], [24.0, 3314.0], [24.1, 3318.0], [24.2, 3335.0], [24.3, 3342.0], [24.4, 3354.0], [24.5, 3360.0], [24.6, 3378.0], [24.7, 3392.0], [24.8, 3393.0], [24.9, 3414.0], [25.0, 3420.0], [25.1, 3424.0], [25.2, 3444.0], [25.3, 3444.0], [25.4, 3457.0], [25.5, 3464.0], [25.6, 3478.0], [25.7, 3501.0], [25.8, 3510.0], [25.9, 3537.0], [26.0, 3560.0], [26.1, 3565.0], [26.2, 3566.0], [26.3, 3572.0], [26.4, 3576.0], [26.5, 3588.0], [26.6, 3591.0], [26.7, 3594.0], [26.8, 3599.0], [26.9, 3601.0], [27.0, 3611.0], [27.1, 3614.0], [27.2, 3614.0], [27.3, 3617.0], [27.4, 3617.0], [27.5, 3627.0], [27.6, 3632.0], [27.7, 3634.0], [27.8, 3635.0], [27.9, 3636.0], [28.0, 3637.0], [28.1, 3638.0], [28.2, 3657.0], [28.3, 3675.0], [28.4, 3678.0], [28.5, 3679.0], [28.6, 3681.0], [28.7, 3688.0], [28.8, 3688.0], [28.9, 3692.0], [29.0, 3698.0], [29.1, 3709.0], [29.2, 3710.0], [29.3, 3711.0], [29.4, 3718.0], [29.5, 3720.0], [29.6, 3729.0], [29.7, 3734.0], [29.8, 3735.0], [29.9, 3755.0], [30.0, 3765.0], [30.1, 3774.0], [30.2, 3783.0], [30.3, 3794.0], [30.4, 3804.0], [30.5, 3815.0], [30.6, 3823.0], [30.7, 3824.0], [30.8, 3830.0], [30.9, 3831.0], [31.0, 3841.0], [31.1, 3849.0], [31.2, 3859.0], [31.3, 3867.0], [31.4, 3874.0], [31.5, 3878.0], [31.6, 3891.0], [31.7, 3892.0], [31.8, 3893.0], [31.9, 3895.0], [32.0, 3899.0], [32.1, 3906.0], [32.2, 3911.0], [32.3, 3916.0], [32.4, 3920.0], [32.5, 3923.0], [32.6, 3929.0], [32.7, 3939.0], [32.8, 3939.0], [32.9, 3946.0], [33.0, 3952.0], [33.1, 3954.0], [33.2, 3958.0], [33.3, 3964.0], [33.4, 3967.0], [33.5, 3967.0], [33.6, 3976.0], [33.7, 3983.0], [33.8, 3986.0], [33.9, 4004.0], [34.0, 4010.0], [34.1, 4012.0], [34.2, 4020.0], [34.3, 4028.0], [34.4, 4054.0], [34.5, 4057.0], [34.6, 4067.0], [34.7, 4074.0], [34.8, 4076.0], [34.9, 4082.0], [35.0, 4083.0], [35.1, 4087.0], [35.2, 4091.0], [35.3, 4102.0], [35.4, 4104.0], [35.5, 4111.0], [35.6, 4113.0], [35.7, 4120.0], [35.8, 4131.0], [35.9, 4137.0], [36.0, 4138.0], [36.1, 4139.0], [36.2, 4147.0], [36.3, 4158.0], [36.4, 4166.0], [36.5, 4168.0], [36.6, 4171.0], [36.7, 4172.0], [36.8, 4173.0], [36.9, 4180.0], [37.0, 4199.0], [37.1, 4201.0], [37.2, 4208.0], [37.3, 4217.0], [37.4, 4229.0], [37.5, 4233.0], [37.6, 4246.0], [37.7, 4252.0], [37.8, 4259.0], [37.9, 4287.0], [38.0, 4287.0], [38.1, 4317.0], [38.2, 4331.0], [38.3, 4336.0], [38.4, 4350.0], [38.5, 4353.0], [38.6, 4361.0], [38.7, 4361.0], [38.8, 4365.0], [38.9, 4370.0], [39.0, 4372.0], [39.1, 4378.0], [39.2, 4387.0], [39.3, 4397.0], [39.4, 4399.0], [39.5, 4418.0], [39.6, 4426.0], [39.7, 4435.0], [39.8, 4463.0], [39.9, 4464.0], [40.0, 4480.0], [40.1, 4484.0], [40.2, 4499.0], [40.3, 4522.0], [40.4, 4526.0], [40.5, 4547.0], [40.6, 4554.0], [40.7, 4560.0], [40.8, 4564.0], [40.9, 4570.0], [41.0, 4580.0], [41.1, 4585.0], [41.2, 4606.0], [41.3, 4606.0], [41.4, 4614.0], [41.5, 4626.0], [41.6, 4633.0], [41.7, 4655.0], [41.8, 4658.0], [41.9, 4663.0], [42.0, 4668.0], [42.1, 4677.0], [42.2, 4684.0], [42.3, 4684.0], [42.4, 4700.0], [42.5, 4700.0], [42.6, 4714.0], [42.7, 4715.0], [42.8, 4731.0], [42.9, 4739.0], [43.0, 4742.0], [43.1, 4751.0], [43.2, 4752.0], [43.3, 4766.0], [43.4, 4769.0], [43.5, 4772.0], [43.6, 4789.0], [43.7, 4791.0], [43.8, 4795.0], [43.9, 4795.0], [44.0, 4821.0], [44.1, 4838.0], [44.2, 4839.0], [44.3, 4846.0], [44.4, 4847.0], [44.5, 4866.0], [44.6, 4867.0], [44.7, 4875.0], [44.8, 4888.0], [44.9, 4890.0], [45.0, 4908.0], [45.1, 4909.0], [45.2, 4935.0], [45.3, 4943.0], [45.4, 4977.0], [45.5, 4983.0], [45.6, 4987.0], [45.7, 5003.0], [45.8, 5007.0], [45.9, 5012.0], [46.0, 5014.0], [46.1, 5024.0], [46.2, 5045.0], [46.3, 5057.0], [46.4, 5063.0], [46.5, 5068.0], [46.6, 5091.0], [46.7, 5093.0], [46.8, 5110.0], [46.9, 5113.0], [47.0, 5115.0], [47.1, 5127.0], [47.2, 5128.0], [47.3, 5132.0], [47.4, 5144.0], [47.5, 5144.0], [47.6, 5173.0], [47.7, 5182.0], [47.8, 5208.0], [47.9, 5212.0], [48.0, 5218.0], [48.1, 5224.0], [48.2, 5232.0], [48.3, 5234.0], [48.4, 5242.0], [48.5, 5249.0], [48.6, 5252.0], [48.7, 5260.0], [48.8, 5275.0], [48.9, 5277.0], [49.0, 5295.0], [49.1, 5300.0], [49.2, 5319.0], [49.3, 5319.0], [49.4, 5334.0], [49.5, 5349.0], [49.6, 5354.0], [49.7, 5373.0], [49.8, 5375.0], [49.9, 5377.0], [50.0, 5394.0], [50.1, 5399.0], [50.2, 5402.0], [50.3, 5408.0], [50.4, 5429.0], [50.5, 5436.0], [50.6, 5443.0], [50.7, 5450.0], [50.8, 5458.0], [50.9, 5468.0], [51.0, 5473.0], [51.1, 5484.0], [51.2, 5485.0], [51.3, 5494.0], [51.4, 5500.0], [51.5, 5501.0], [51.6, 5509.0], [51.7, 5511.0], [51.8, 5514.0], [51.9, 5519.0], [52.0, 5529.0], [52.1, 5545.0], [52.2, 5546.0], [52.3, 5554.0], [52.4, 5560.0], [52.5, 5563.0], [52.6, 5565.0], [52.7, 5566.0], [52.8, 5593.0], [52.9, 5597.0], [53.0, 5611.0], [53.1, 5612.0], [53.2, 5614.0], [53.3, 5649.0], [53.4, 5649.0], [53.5, 5669.0], [53.6, 5674.0], [53.7, 5681.0], [53.8, 5688.0], [53.9, 5689.0], [54.0, 5694.0], [54.1, 5699.0], [54.2, 5716.0], [54.3, 5728.0], [54.4, 5728.0], [54.5, 5743.0], [54.6, 5748.0], [54.7, 5751.0], [54.8, 5762.0], [54.9, 5768.0], [55.0, 5769.0], [55.1, 5771.0], [55.2, 5774.0], [55.3, 5782.0], [55.4, 5800.0], [55.5, 5802.0], [55.6, 5809.0], [55.7, 5822.0], [55.8, 5846.0], [55.9, 5846.0], [56.0, 5855.0], [56.1, 5863.0], [56.2, 5864.0], [56.3, 5881.0], [56.4, 5887.0], [56.5, 5895.0], [56.6, 5899.0], [56.7, 5905.0], [56.8, 5920.0], [56.9, 5927.0], [57.0, 5942.0], [57.1, 5945.0], [57.2, 5974.0], [57.3, 5976.0], [57.4, 5980.0], [57.5, 5984.0], [57.6, 5995.0], [57.7, 6016.0], [57.8, 6018.0], [57.9, 6022.0], [58.0, 6031.0], [58.1, 6039.0], [58.2, 6047.0], [58.3, 6051.0], [58.4, 6054.0], [58.5, 6056.0], [58.6, 6062.0], [58.7, 6067.0], [58.8, 6072.0], [58.9, 6076.0], [59.0, 6079.0], [59.1, 6094.0], [59.2, 6097.0], [59.3, 6110.0], [59.4, 6115.0], [59.5, 6119.0], [59.6, 6133.0], [59.7, 6134.0], [59.8, 6137.0], [59.9, 6151.0], [60.0, 6155.0], [60.1, 6165.0], [60.2, 6167.0], [60.3, 6183.0], [60.4, 6190.0], [60.5, 6195.0], [60.6, 6201.0], [60.7, 6204.0], [60.8, 6217.0], [60.9, 6225.0], [61.0, 6251.0], [61.1, 6257.0], [61.2, 6271.0], [61.3, 6278.0], [61.4, 6284.0], [61.5, 6297.0], [61.6, 6302.0], [61.7, 6322.0], [61.8, 6324.0], [61.9, 6343.0], [62.0, 6357.0], [62.1, 6362.0], [62.2, 6370.0], [62.3, 6370.0], [62.4, 6377.0], [62.5, 6380.0], [62.6, 6381.0], [62.7, 6395.0], [62.8, 6396.0], [62.9, 6404.0], [63.0, 6406.0], [63.1, 6412.0], [63.2, 6424.0], [63.3, 6436.0], [63.4, 6439.0], [63.5, 6442.0], [63.6, 6450.0], [63.7, 6454.0], [63.8, 6470.0], [63.9, 6473.0], [64.0, 6475.0], [64.1, 6477.0], [64.2, 6481.0], [64.3, 6490.0], [64.4, 6496.0], [64.5, 6526.0], [64.6, 6534.0], [64.7, 6541.0], [64.8, 6546.0], [64.9, 6556.0], [65.0, 6562.0], [65.1, 6574.0], [65.2, 6595.0], [65.3, 6609.0], [65.4, 6610.0], [65.5, 6630.0], [65.6, 6634.0], [65.7, 6663.0], [65.8, 6672.0], [65.9, 6680.0], [66.0, 6699.0], [66.1, 6704.0], [66.2, 6706.0], [66.3, 6708.0], [66.4, 6714.0], [66.5, 6722.0], [66.6, 6727.0], [66.7, 6757.0], [66.8, 6760.0], [66.9, 6768.0], [67.0, 6776.0], [67.1, 6778.0], [67.2, 6785.0], [67.3, 6802.0], [67.4, 6809.0], [67.5, 6813.0], [67.6, 6818.0], [67.7, 6833.0], [67.8, 6837.0], [67.9, 6843.0], [68.0, 6850.0], [68.1, 6855.0], [68.2, 6855.0], [68.3, 6871.0], [68.4, 6877.0], [68.5, 6882.0], [68.6, 6899.0], [68.7, 6901.0], [68.8, 6922.0], [68.9, 6922.0], [69.0, 6936.0], [69.1, 6939.0], [69.2, 6940.0], [69.3, 6955.0], [69.4, 6958.0], [69.5, 6986.0], [69.6, 6998.0], [69.7, 7002.0], [69.8, 7005.0], [69.9, 7005.0], [70.0, 7019.0], [70.1, 7020.0], [70.2, 7042.0], [70.3, 7047.0], [70.4, 7058.0], [70.5, 7067.0], [70.6, 7076.0], [70.7, 7083.0], [70.8, 7089.0], [70.9, 7092.0], [71.0, 7095.0], [71.1, 7107.0], [71.2, 7117.0], [71.3, 7117.0], [71.4, 7124.0], [71.5, 7131.0], [71.6, 7135.0], [71.7, 7140.0], [71.8, 7148.0], [71.9, 7166.0], [72.0, 7172.0], [72.1, 7180.0], [72.2, 7199.0], [72.3, 7204.0], [72.4, 7238.0], [72.5, 7240.0], [72.6, 7245.0], [72.7, 7246.0], [72.8, 7267.0], [72.9, 7268.0], [73.0, 7281.0], [73.1, 7285.0], [73.2, 7297.0], [73.3, 7304.0], [73.4, 7322.0], [73.5, 7341.0], [73.6, 7342.0], [73.7, 7343.0], [73.8, 7354.0], [73.9, 7361.0], [74.0, 7368.0], [74.1, 7368.0], [74.2, 7370.0], [74.3, 7381.0], [74.4, 7388.0], [74.5, 7393.0], [74.6, 7403.0], [74.7, 7406.0], [74.8, 7432.0], [74.9, 7438.0], [75.0, 7445.0], [75.1, 7453.0], [75.2, 7468.0], [75.3, 7469.0], [75.4, 7473.0], [75.5, 7484.0], [75.6, 7488.0], [75.7, 7497.0], [75.8, 7498.0], [75.9, 7504.0], [76.0, 7512.0], [76.1, 7524.0], [76.2, 7526.0], [76.3, 7531.0], [76.4, 7546.0], [76.5, 7549.0], [76.6, 7564.0], [76.7, 7565.0], [76.8, 7571.0], [76.9, 7577.0], [77.0, 7586.0], [77.1, 7603.0], [77.2, 7608.0], [77.3, 7612.0], [77.4, 7617.0], [77.5, 7630.0], [77.6, 7631.0], [77.7, 7659.0], [77.8, 7682.0], [77.9, 7682.0], [78.0, 7689.0], [78.1, 7693.0], [78.2, 7699.0], [78.3, 7703.0], [78.4, 7713.0], [78.5, 7731.0], [78.6, 7731.0], [78.7, 7736.0], [78.8, 7748.0], [78.9, 7752.0], [79.0, 7770.0], [79.1, 7772.0], [79.2, 7776.0], [79.3, 7785.0], [79.4, 7791.0], [79.5, 7797.0], [79.6, 7808.0], [79.7, 7810.0], [79.8, 7812.0], [79.9, 7816.0], [80.0, 7817.0], [80.1, 7825.0], [80.2, 7828.0], [80.3, 7842.0], [80.4, 7853.0], [80.5, 7861.0], [80.6, 7871.0], [80.7, 7874.0], [80.8, 7876.0], [80.9, 7876.0], [81.0, 7889.0], [81.1, 7915.0], [81.2, 7921.0], [81.3, 7952.0], [81.4, 7952.0], [81.5, 7971.0], [81.6, 7983.0], [81.7, 7984.0], [81.8, 7984.0], [81.9, 8006.0], [82.0, 8013.0], [82.1, 8020.0], [82.2, 8027.0], [82.3, 8036.0], [82.4, 8038.0], [82.5, 8045.0], [82.6, 8055.0], [82.7, 8105.0], [82.8, 8109.0], [82.9, 8118.0], [83.0, 8129.0], [83.1, 8131.0], [83.2, 8138.0], [83.3, 8143.0], [83.4, 8150.0], [83.5, 8153.0], [83.6, 8174.0], [83.7, 8209.0], [83.8, 8242.0], [83.9, 8251.0], [84.0, 8256.0], [84.1, 8294.0], [84.2, 8316.0], [84.3, 8342.0], [84.4, 8357.0], [84.5, 8364.0], [84.6, 8371.0], [84.7, 8386.0], [84.8, 8391.0], [84.9, 8395.0], [85.0, 8398.0], [85.1, 8408.0], [85.2, 8411.0], [85.3, 8421.0], [85.4, 8421.0], [85.5, 8423.0], [85.6, 8431.0], [85.7, 8443.0], [85.8, 8465.0], [85.9, 8468.0], [86.0, 8496.0], [86.1, 8502.0], [86.2, 8517.0], [86.3, 8534.0], [86.4, 8536.0], [86.5, 8545.0], [86.6, 8550.0], [86.7, 8562.0], [86.8, 8581.0], [86.9, 8605.0], [87.0, 8627.0], [87.1, 8664.0], [87.2, 8676.0], [87.3, 8685.0], [87.4, 8715.0], [87.5, 8717.0], [87.6, 8724.0], [87.7, 8792.0], [87.8, 8796.0], [87.9, 8820.0], [88.0, 8830.0], [88.1, 8844.0], [88.2, 8868.0], [88.3, 8878.0], [88.4, 8887.0], [88.5, 8892.0], [88.6, 8901.0], [88.7, 8901.0], [88.8, 8919.0], [88.9, 8937.0], [89.0, 8942.0], [89.1, 8947.0], [89.2, 8965.0], [89.3, 8975.0], [89.4, 8977.0], [89.5, 9000.0], [89.6, 9028.0], [89.7, 9030.0], [89.8, 9039.0], [89.9, 9051.0], [90.0, 9055.0], [90.1, 9103.0], [90.2, 9128.0], [90.3, 9146.0], [90.4, 9152.0], [90.5, 9152.0], [90.6, 9157.0], [90.7, 9206.0], [90.8, 9219.0], [90.9, 9232.0], [91.0, 9241.0], [91.1, 9273.0], [91.2, 9286.0], [91.3, 9299.0], [91.4, 9329.0], [91.5, 9394.0], [91.6, 9401.0], [91.7, 9420.0], [91.8, 9430.0], [91.9, 9442.0], [92.0, 9450.0], [92.1, 9469.0], [92.2, 9483.0], [92.3, 9503.0], [92.4, 9516.0], [92.5, 9530.0], [92.6, 9532.0], [92.7, 9544.0], [92.8, 9571.0], [92.9, 9593.0], [93.0, 9605.0], [93.1, 9632.0], [93.2, 9678.0], [93.3, 9687.0], [93.4, 9698.0], [93.5, 9713.0], [93.6, 9732.0], [93.7, 9735.0], [93.8, 9741.0], [93.9, 9743.0], [94.0, 9771.0], [94.1, 9775.0], [94.2, 9779.0], [94.3, 9813.0], [94.4, 9863.0], [94.5, 9877.0], [94.6, 9888.0], [94.7, 9901.0], [94.8, 9921.0], [94.9, 9929.0], [95.0, 9960.0], [95.1, 9997.0], [95.2, 10011.0], [95.3, 10035.0], [95.4, 10056.0], [95.5, 10068.0], [95.6, 10104.0], [95.7, 10127.0], [95.8, 10133.0], [95.9, 10165.0], [96.0, 10167.0], [96.1, 10189.0], [96.2, 10212.0], [96.3, 10215.0], [96.4, 10235.0], [96.5, 10239.0], [96.6, 10268.0], [96.7, 10273.0], [96.8, 10299.0], [96.9, 10315.0], [97.0, 10336.0], [97.1, 10380.0], [97.2, 10397.0], [97.3, 10440.0], [97.4, 10511.0], [97.5, 10517.0], [97.6, 10576.0], [97.7, 10578.0], [97.8, 10629.0], [97.9, 10648.0], [98.0, 10651.0], [98.1, 10761.0], [98.2, 10762.0], [98.3, 10769.0], [98.4, 10784.0], [98.5, 10821.0], [98.6, 10836.0], [98.7, 10891.0], [98.8, 10907.0], [98.9, 10913.0], [99.0, 10968.0], [99.1, 10996.0], [99.2, 10997.0], [99.3, 11015.0], [99.4, 11027.0], [99.5, 11115.0], [99.6, 11115.0], [99.7, 11147.0], [99.8, 11169.0], [99.9, 11257.0]], "isOverall": false, "label": "300 users", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 153.0, "series": [{"data": [[600.0, 43.0], [700.0, 58.0], [800.0, 48.0], [900.0, 54.0], [1000.0, 39.0], [1100.0, 29.0], [1200.0, 38.0], [1300.0, 62.0], [1400.0, 54.0], [1500.0, 48.0], [100.0, 34.0], [1600.0, 49.0], [1700.0, 45.0], [1800.0, 30.0], [1900.0, 38.0], [2000.0, 48.0], [2100.0, 44.0], [2300.0, 38.0], [2200.0, 41.0], [2400.0, 38.0], [2500.0, 34.0], [2600.0, 32.0], [2700.0, 39.0], [2800.0, 29.0], [2900.0, 37.0], [3000.0, 36.0], [3100.0, 41.0], [200.0, 48.0], [3200.0, 29.0], [3300.0, 26.0], [3400.0, 24.0], [3500.0, 23.0], [3600.0, 30.0], [3700.0, 16.0], [3800.0, 19.0], [3900.0, 16.0], [4000.0, 11.0], [4300.0, 1.0], [300.0, 63.0], [400.0, 47.0], [500.0, 46.0]], "isOverall": false, "label": "100 users", "isController": false}, {"data": [[0.0, 25.0], [600.0, 153.0], [700.0, 117.0], [200.0, 150.0], [800.0, 115.0], [900.0, 130.0], [1000.0, 138.0], [1100.0, 116.0], [300.0, 151.0], [1200.0, 84.0], [1300.0, 69.0], [1400.0, 56.0], [1500.0, 47.0], [100.0, 130.0], [400.0, 127.0], [1600.0, 24.0], [1700.0, 16.0], [1800.0, 14.0], [1900.0, 1.0], [500.0, 145.0]], "isOverall": false, "label": "50 users", "isController": false}, {"data": [[600.0, 27.0], [700.0, 21.0], [800.0, 13.0], [900.0, 17.0], [1000.0, 21.0], [1100.0, 31.0], [1200.0, 37.0], [1300.0, 18.0], [1400.0, 17.0], [1500.0, 25.0], [1600.0, 14.0], [1700.0, 34.0], [1800.0, 25.0], [1900.0, 20.0], [2000.0, 17.0], [2100.0, 20.0], [2200.0, 21.0], [2300.0, 15.0], [2400.0, 13.0], [2500.0, 17.0], [2600.0, 16.0], [2700.0, 18.0], [2800.0, 18.0], [2900.0, 18.0], [3000.0, 19.0], [3100.0, 13.0], [3200.0, 25.0], [3300.0, 34.0], [3400.0, 11.0], [3500.0, 20.0], [3700.0, 23.0], [3600.0, 24.0], [3800.0, 20.0], [3900.0, 32.0], [4000.0, 26.0], [4200.0, 22.0], [4300.0, 29.0], [4100.0, 23.0], [4400.0, 12.0], [4500.0, 27.0], [4600.0, 22.0], [4700.0, 19.0], [4800.0, 23.0], [4900.0, 30.0], [5000.0, 21.0], [5100.0, 14.0], [5200.0, 23.0], [5300.0, 19.0], [5400.0, 21.0], [5500.0, 22.0], [5600.0, 15.0], [5700.0, 18.0], [5800.0, 14.0], [5900.0, 16.0], [6000.0, 22.0], [6100.0, 13.0], [6300.0, 11.0], [6200.0, 10.0], [6400.0, 20.0], [6600.0, 15.0], [6500.0, 16.0], [6700.0, 21.0], [6800.0, 20.0], [6900.0, 25.0], [7000.0, 20.0], [7100.0, 15.0], [7200.0, 12.0], [7300.0, 8.0], [7400.0, 7.0], [7600.0, 10.0], [7500.0, 10.0], [7800.0, 4.0], [7900.0, 1.0], [100.0, 22.0], [200.0, 41.0], [300.0, 38.0], [400.0, 30.0], [500.0, 37.0]], "isOverall": false, "label": "200 users", "isController": false}, {"data": [[100.0, 5.0], [200.0, 10.0], [300.0, 3.0], [400.0, 1.0], [600.0, 1.0], [700.0, 1.0], [800.0, 2.0], [900.0, 5.0], [1000.0, 2.0], [1100.0, 6.0], [1200.0, 6.0], [1300.0, 11.0], [1400.0, 13.0], [1500.0, 6.0], [1600.0, 6.0], [1700.0, 8.0], [1800.0, 4.0], [1900.0, 3.0], [2000.0, 5.0], [2100.0, 19.0], [2200.0, 13.0], [2300.0, 22.0], [2400.0, 29.0], [2500.0, 24.0], [2600.0, 31.0], [2700.0, 17.0], [2800.0, 32.0], [2900.0, 33.0], [3000.0, 21.0], [3100.0, 19.0], [3300.0, 16.0], [3200.0, 17.0], [3400.0, 14.0], [3500.0, 18.0], [3600.0, 35.0], [3700.0, 21.0], [3800.0, 26.0], [3900.0, 29.0], [4000.0, 21.0], [4200.0, 16.0], [4100.0, 29.0], [4300.0, 21.0], [4400.0, 13.0], [4600.0, 19.0], [4500.0, 15.0], [4700.0, 24.0], [4800.0, 17.0], [4900.0, 11.0], [5000.0, 16.0], [5100.0, 17.0], [5300.0, 18.0], [5200.0, 20.0], [5500.0, 24.0], [5400.0, 19.0], [5600.0, 20.0], [5800.0, 20.0], [5700.0, 19.0], [5900.0, 15.0], [6000.0, 25.0], [6100.0, 22.0], [6200.0, 15.0], [6300.0, 21.0], [6500.0, 13.0], [6400.0, 24.0], [6600.0, 13.0], [6700.0, 19.0], [6900.0, 15.0], [6800.0, 22.0], [7000.0, 23.0], [7100.0, 18.0], [7400.0, 20.0], [7200.0, 17.0], [7300.0, 20.0], [7500.0, 20.0], [7600.0, 18.0], [7900.0, 13.0], [7700.0, 21.0], [7800.0, 23.0], [8100.0, 16.0], [8000.0, 13.0], [8300.0, 14.0], [8400.0, 16.0], [8200.0, 7.0], [8500.0, 13.0], [8600.0, 7.0], [8700.0, 8.0], [8800.0, 11.0], [8900.0, 15.0], [9000.0, 9.0], [9200.0, 10.0], [9100.0, 10.0], [9400.0, 11.0], [9300.0, 4.0], [9500.0, 11.0], [9600.0, 7.0], [9700.0, 14.0], [9800.0, 6.0], [10100.0, 10.0], [9900.0, 7.0], [10200.0, 10.0], [10000.0, 7.0], [10300.0, 6.0], [10400.0, 2.0], [10600.0, 4.0], [10500.0, 7.0], [10700.0, 7.0], [10800.0, 5.0], [10900.0, 7.0], [11000.0, 4.0], [11100.0, 5.0], [11200.0, 2.0], [11300.0, 1.0]], "isOverall": false, "label": "300 users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 926.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3661.0, "series": [{"data": [[0.0, 926.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1880.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3661.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 45.47289823008841, "minX": 1.66556178E12, "maxY": 265.6180203045686, "series": [{"data": [[1.6655619E12, 265.6180203045686]], "isOverall": false, "label": "Phase 4", "isController": false}, {"data": [[1.66556184E12, 194.3608017817374], [1.6655619E12, 106.02843601895728]], "isOverall": false, "label": "Phase 3", "isController": false}, {"data": [[1.66556184E12, 91.21114754098365]], "isOverall": false, "label": "Phase 2", "isController": false}, {"data": [[1.66556178E12, 45.47289823008841]], "isOverall": false, "label": "Phase 1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6655619E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 83.0, "minX": 1.0, "maxY": 10213.0, "series": [{"data": [[2.0, 327.0], [3.0, 205.5], [4.0, 111.0], [5.0, 821.25], [6.0, 116.5], [7.0, 673.8], [8.0, 129.0], [9.0, 694.4], [10.0, 828.5], [11.0, 185.25], [12.0, 1454.0], [13.0, 221.0], [14.0, 1043.6666666666667], [15.0, 239.0], [16.0, 546.25], [17.0, 868.5], [18.0, 688.4], [19.0, 262.0], [20.0, 478.5], [21.0, 1300.5], [22.0, 358.0], [23.0, 1349.0], [25.0, 810.0000000000001], [26.0, 345.0], [27.0, 819.5], [28.0, 476.83333333333337], [29.0, 1033.0], [30.0, 1034.0], [31.0, 678.5], [32.0, 273.5], [33.0, 789.0], [35.0, 436.0], [34.0, 864.0], [36.0, 769.3333333333334], [37.0, 673.0], [38.0, 675.5], [39.0, 873.875], [40.0, 762.0], [41.0, 347.0], [42.0, 688.0], [44.0, 598.6666666666666], [45.0, 671.0], [46.0, 804.25], [47.0, 866.0], [49.0, 983.0], [48.0, 682.0], [50.0, 1017.5], [51.0, 910.0], [52.0, 1091.75], [54.0, 870.0], [55.0, 818.0], [56.0, 1019.0], [57.0, 1427.0], [58.0, 684.3333333333335], [59.0, 791.0], [60.0, 1103.0], [61.0, 715.3333333333334], [63.0, 731.6], [64.0, 751.0], [65.0, 984.0], [66.0, 774.3333333333334], [67.0, 1083.0], [69.0, 1188.6], [70.0, 919.0], [71.0, 890.0], [68.0, 395.5], [72.0, 1517.0], [73.0, 1004.0], [74.0, 823.6666666666667], [76.0, 860.0], [77.0, 1849.7142857142858], [78.0, 1185.142857142857], [79.0, 2071.5], [83.0, 3293.0], [82.0, 3275.0], [81.0, 3241.0], [80.0, 3241.0], [84.0, 1201.8666666666666], [87.0, 1682.6666666666665], [86.0, 3189.0], [85.0, 3236.0], [90.0, 1781.6666666666665], [91.0, 1633.0], [89.0, 3110.0], [88.0, 3073.0], [92.0, 2148.5], [94.0, 2253.0], [95.0, 2232.5], [93.0, 2941.0], [98.0, 2106.3333333333335], [99.0, 2788.0], [97.0, 2815.0], [96.0, 2823.0], [100.0, 1987.6547049441788], [1.0, 302.0]], "isOverall": false, "label": "100 users", "isController": false}, {"data": [[91.21114754098365, 1818.6196721311496]], "isOverall": false, "label": "100 users-Aggregated", "isController": false}, {"data": [[2.0, 121.0], [3.0, 83.0], [4.0, 116.16666666666667], [5.0, 108.16666666666667], [6.0, 91.83333333333333], [7.0, 119.28571428571429], [8.0, 198.0], [9.0, 203.14285714285714], [10.0, 180.4], [11.0, 196.00000000000003], [12.0, 239.0], [13.0, 240.0], [14.0, 230.60000000000002], [15.0, 285.6], [16.0, 195.375], [17.0, 355.85714285714283], [18.0, 246.91666666666666], [19.0, 218.0], [20.0, 224.7142857142857], [21.0, 427.5], [22.0, 379.3333333333333], [23.0, 384.55555555555554], [24.0, 237.85714285714286], [25.0, 423.0], [26.0, 339.0], [27.0, 361.3333333333333], [28.0, 361.7], [29.0, 296.5], [30.0, 338.33333333333337], [31.0, 423.6666666666667], [32.0, 506.79999999999995], [33.0, 283.33333333333337], [34.0, 516.3333333333334], [35.0, 638.8571428571429], [36.0, 546.3333333333334], [37.0, 371.0], [38.0, 741.9230769230769], [39.0, 591.6666666666666], [40.0, 908.5], [41.0, 583.1428571428571], [42.0, 773.0], [43.0, 1101.5], [44.0, 534.2142857142858], [45.0, 697.2727272727273], [47.0, 1166.6666666666667], [46.0, 1298.0], [48.0, 646.1], [49.0, 581.0], [50.0, 847.6512261580384], [1.0, 184.0]], "isOverall": false, "label": "50 users", "isController": false}, {"data": [[45.47289823008841, 763.9551991150447]], "isOverall": false, "label": "50 users-Aggregated", "isController": false}, {"data": [[2.0, 178.0], [3.0, 1590.0], [4.0, 1776.0], [5.0, 122.0], [6.0, 122.0], [7.0, 1794.0], [8.0, 143.0], [9.0, 1807.5], [10.0, 181.0], [11.0, 1273.6666666666667], [13.0, 1114.6666666666667], [15.0, 916.5], [16.0, 1774.0], [17.0, 1015.5], [19.0, 920.0], [21.0, 1327.5], [22.0, 1577.0], [24.0, 1584.0], [25.0, 348.0], [27.0, 1584.0], [28.0, 1193.0], [29.0, 440.0], [30.0, 1247.0], [31.0, 781.3333333333334], [33.0, 1153.0], [34.0, 1144.0], [37.0, 736.0], [36.0, 1296.3333333333333], [38.0, 574.875], [41.0, 1285.0], [40.0, 1306.0], [42.0, 571.0], [43.0, 1216.0], [44.0, 1515.0], [46.0, 1013.0], [47.0, 1237.0], [48.0, 1227.0], [50.0, 1105.3333333333333], [51.0, 907.0], [52.0, 798.5], [53.0, 899.0], [55.0, 1370.0], [56.0, 998.0], [59.0, 1059.25], [58.0, 808.0], [60.0, 775.0], [62.0, 705.25], [67.0, 629.0], [66.0, 668.0], [64.0, 706.0], [71.0, 600.0], [70.0, 610.6666666666666], [72.0, 1004.5], [74.0, 521.0], [73.0, 585.0], [79.0, 344.0], [78.0, 499.0], [77.0, 462.6666666666667], [82.0, 1598.0], [83.0, 343.5], [81.0, 327.0], [80.0, 361.0], [87.0, 226.0], [86.0, 327.0], [85.0, 360.0], [84.0, 343.0], [90.0, 5548.0], [89.0, 218.0], [88.0, 326.0], [93.0, 5308.0], [92.0, 5534.0], [99.0, 5182.0], [98.0, 5196.0], [97.0, 5206.0], [96.0, 5220.666666666667], [100.0, 3663.5], [103.0, 5033.0], [102.0, 5110.0], [101.0, 5190.0], [107.0, 4958.0], [106.0, 5032.0], [105.0, 4966.0], [104.0, 5066.0], [110.0, 4928.0], [108.0, 4948.0], [112.0, 4099.0], [115.0, 2584.0], [114.0, 4913.0], [116.0, 4105.666666666667], [118.0, 1019.625], [119.0, 4857.0], [117.0, 4878.0], [120.0, 2780.5], [122.0, 4722.5], [126.0, 2763.0], [127.0, 4688.0], [125.0, 4608.0], [124.0, 4642.0], [130.0, 2850.5], [135.0, 4437.0], [134.0, 4571.0], [133.0, 4580.5], [131.0, 4618.0], [129.0, 4611.5], [136.0, 2768.5], [141.0, 2849.5], [143.0, 4250.0], [140.0, 4347.0], [139.0, 4337.0], [138.0, 4352.5], [144.0, 2996.0], [151.0, 4136.0], [150.0, 4213.5], [148.0, 4215.0], [147.0, 4216.0], [146.0, 4367.0], [145.0, 4229.0], [152.0, 2743.0], [158.0, 2681.5], [159.0, 3931.0], [157.0, 4056.0], [156.0, 3950.0], [154.0, 4004.0], [153.0, 4064.0], [162.0, 2715.0], [165.0, 3002.0], [167.0, 3964.0], [166.0, 3965.0], [164.0, 3781.0], [163.0, 3857.0], [161.0, 3984.0], [160.0, 3943.0], [168.0, 2214.75], [175.0, 3661.0], [174.0, 3729.0], [173.0, 3657.0], [172.0, 3667.0], [171.0, 3899.5], [169.0, 3924.5], [176.0, 2844.5], [183.0, 3534.0], [182.0, 3535.0], [181.0, 3546.0], [180.0, 3623.0], [179.0, 3653.0], [178.0, 3657.0], [177.0, 3625.0], [185.0, 2110.0], [188.0, 1004.0], [191.0, 3384.0], [190.0, 3350.0], [189.0, 3357.0], [187.0, 3443.0], [186.0, 3532.5], [184.0, 3533.0], [195.0, 2265.5], [198.0, 3206.0], [197.0, 3213.0], [196.0, 3253.0], [194.0, 3318.0], [192.0, 3348.0], [200.0, 3775.8447876447867], [1.0, 154.0]], "isOverall": false, "label": "200 users", "isController": false}, {"data": [[182.39794608472425, 3538.1957637997407]], "isOverall": false, "label": "200 users-Aggregated", "isController": false}, {"data": [[2.0, 1961.0], [3.0, 2140.0], [4.0, 4173.0], [6.0, 2151.0], [7.0, 4172.0], [8.0, 2139.0], [9.0, 3171.0], [10.0, 216.66666666666669], [12.0, 3976.0], [13.0, 4027.5], [14.0, 2084.75], [15.0, 3878.0], [16.0, 3893.0], [18.0, 3953.0], [21.0, 2994.25], [22.0, 3639.0], [23.0, 3721.0], [24.0, 3638.0], [25.0, 3734.0], [26.0, 3688.0], [27.0, 3637.0], [28.0, 3720.0], [29.0, 3483.0], [31.0, 3692.0], [33.0, 3636.0], [32.0, 3703.0], [35.0, 3299.0], [34.0, 3636.0], [37.0, 3632.0], [36.0, 3634.0], [39.0, 3354.0], [38.0, 3271.0], [41.0, 3291.0], [40.0, 3177.0], [43.0, 3169.0], [42.0, 3290.0], [45.0, 3238.0], [44.0, 3169.0], [47.0, 3135.0], [46.0, 3145.0], [48.0, 3184.0], [51.0, 3132.0], [50.0, 3132.5], [53.0, 2924.0], [52.0, 2926.0], [55.0, 2956.0], [54.0, 3033.0], [57.0, 2238.0], [58.0, 3017.0], [61.0, 2913.0], [60.0, 2922.0], [63.0, 2916.5], [67.0, 2710.0], [66.0, 2877.0], [65.0, 2885.0], [64.0, 2888.0], [69.0, 1727.5], [71.0, 2873.0], [70.0, 2467.0], [68.0, 2642.0], [75.0, 2462.0], [74.0, 2818.0], [73.0, 2463.0], [72.0, 2883.0], [78.0, 2619.0], [77.0, 2622.0], [76.0, 2462.0], [83.0, 2457.0], [82.0, 2458.0], [81.0, 2553.6666666666665], [84.0, 1847.0], [87.0, 2421.0], [86.0, 2454.0], [85.0, 2457.0], [90.0, 2152.0], [89.0, 2151.0], [88.0, 2380.0], [95.0, 2132.0], [94.0, 2211.5], [92.0, 2229.5], [99.0, 2008.0], [98.0, 2096.0], [97.0, 2140.0], [96.0, 2127.0], [103.0, 8038.0], [102.0, 8036.0], [101.0, 5937.0], [100.0, 2135.0], [107.0, 7773.0], [106.0, 7875.0], [105.0, 7882.0], [104.0, 7889.0], [110.0, 4342.0], [111.0, 7529.0], [109.0, 7733.0], [108.0, 7825.0], [114.0, 2149.833333333333], [113.0, 7522.0], [112.0, 7524.0], [116.0, 3116.0], [117.0, 4730.0], [118.0, 1737.083333333333], [119.0, 7281.0], [123.0, 7717.0], [122.0, 7204.0], [121.0, 7370.0], [120.0, 7839.0], [127.0, 7682.0], [126.0, 7648.0], [125.0, 7135.0], [124.0, 7148.0], [135.0, 7062.0], [134.0, 7132.0], [133.0, 7199.0], [132.0, 6901.0], [131.0, 7512.0], [130.0, 7131.0], [129.0, 7682.0], [128.0, 7693.0], [138.0, 3177.8333333333335], [143.0, 7361.0], [142.0, 6908.0], [141.0, 6922.0], [140.0, 7177.5], [137.0, 7019.0], [150.0, 6899.0], [149.0, 6816.0], [148.0, 7405.0], [146.0, 6833.0], [145.0, 7451.0], [144.0, 4714.0], [159.0, 6705.0], [158.0, 6706.0], [157.0, 6722.0], [156.0, 4983.0], [155.0, 6721.0], [154.0, 6818.0], [153.0, 6852.0], [152.0, 7244.5], [167.0, 4397.0], [166.0, 6481.0], [165.0, 6680.0], [164.0, 6713.0], [163.0, 4770.0], [162.0, 6762.0], [161.0, 6714.0], [160.0, 6877.0], [174.0, 1984.0], [175.0, 5414.0], [173.0, 6475.0], [172.0, 6669.0], [171.0, 4342.0], [170.0, 6645.0], [169.0, 6460.0], [183.0, 6124.0], [182.0, 6140.0], [181.0, 6053.0], [180.0, 6195.0], [179.0, 6204.0], [178.0, 6436.0], [177.0, 6473.0], [176.0, 6442.0], [191.0, 5728.0], [190.0, 6190.0], [189.0, 5846.0], [188.0, 5846.0], [187.0, 5888.0], [186.0, 6227.0], [185.0, 6362.0], [184.0, 6016.0], [192.0, 4417.0], [199.0, 4312.0], [198.0, 5790.0], [197.0, 5748.0], [196.0, 5868.0], [194.0, 6180.0], [207.0, 5461.5], [205.0, 5422.0], [204.0, 3476.0], [203.0, 5495.0], [202.0, 5501.0], [201.0, 5550.0], [200.0, 5612.0], [215.0, 5259.0], [214.0, 5277.0], [213.0, 3831.0], [212.0, 3342.0], [211.0, 6014.0], [210.0, 5408.0], [209.0, 5443.0], [208.0, 5399.0], [223.0, 5025.0], [222.0, 5223.0], [221.0, 5440.5], [219.0, 5113.0], [218.0, 5895.0], [217.0, 5864.0], [216.0, 5887.0], [231.0, 2577.0], [230.0, 4922.5], [228.0, 5063.0], [227.0, 4896.0], [226.0, 5377.0], [225.0, 4935.0], [224.0, 5007.0], [239.0, 4606.0], [237.0, 4609.0], [236.0, 4426.0], [235.0, 4626.0], [234.0, 4752.0], [233.0, 4808.0], [232.0, 4823.0], [247.0, 3378.0], [246.0, 4067.0], [245.0, 4091.0], [244.0, 4220.0], [243.0, 4288.0], [242.0, 4361.0], [241.0, 4413.0], [240.0, 4599.0], [250.0, 3058.6666666666665], [251.0, 3599.0], [255.0, 4010.0], [254.0, 3944.5], [252.0, 3990.5], [249.0, 4012.0], [248.0, 4119.0], [270.0, 2179.0], [262.0, 3950.6249999999995], [261.0, 1356.0], [260.0, 3613.0], [271.0, 2599.0], [269.0, 2294.0], [268.0, 2948.5], [266.0, 3566.0], [265.0, 3164.0], [264.0, 3576.0], [263.0, 3573.0], [257.0, 3892.0], [256.0, 3969.0], [259.0, 3733.0], [258.0, 3830.0], [285.0, 4183.5], [272.0, 3583.0], [274.0, 4435.0], [273.0, 973.0], [278.0, 4049.8333333333335], [277.0, 2321.0], [276.0, 2909.0], [279.0, 2727.0], [280.0, 4394.0], [282.0, 4751.0], [281.0, 2875.0], [283.0, 2858.5], [286.0, 3507.0], [287.0, 4051.3333333333335], [284.0, 2651.0], [275.0, 3175.0], [300.0, 5931.94397993311], [288.0, 3631.5], [289.0, 4193.5], [291.0, 2378.0], [290.0, 2389.0], [295.0, 1753.0], [298.0, 1333.0], [299.0, 10213.0], [297.0, 10165.0], [296.0, 2297.0], [294.0, 2323.0], [293.0, 2290.0], [292.0, 2345.0], [1.0, 1999.0]], "isOverall": false, "label": "300 users", "isController": false}, {"data": [[265.6180203045686, 5499.79885786803]], "isOverall": false, "label": "300 users-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5331.216666666666, "minX": 1.66556178E12, "maxY": 31352.666666666668, "series": [{"data": [[1.66556184E12, 31352.666666666668], [1.6655619E12, 19508.083333333332], [1.66556178E12, 19737.333333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66556184E12, 8568.133333333333], [1.6655619E12, 5331.216666666666], [1.66556178E12, 5393.866666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6655619E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 763.9551991150447, "minX": 1.66556178E12, "maxY": 5499.79885786803, "series": [{"data": [[1.66556184E12, 1818.6196721311496]], "isOverall": false, "label": "100 users", "isController": false}, {"data": [[1.66556178E12, 763.9551991150447]], "isOverall": false, "label": "50 users", "isController": false}, {"data": [[1.66556184E12, 3647.1239792130646], [1.6655619E12, 2842.810426540285]], "isOverall": false, "label": "200 users", "isController": false}, {"data": [[1.6655619E12, 5499.79885786803]], "isOverall": false, "label": "300 users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6655619E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 763.8667035398225, "minX": 1.66556178E12, "maxY": 5499.065355329941, "series": [{"data": [[1.66556184E12, 1818.3809836065554]], "isOverall": false, "label": "100 users", "isController": false}, {"data": [[1.66556178E12, 763.8667035398225]], "isOverall": false, "label": "50 users", "isController": false}, {"data": [[1.66556184E12, 3647.0378619153703], [1.6655619E12, 2842.720379146921]], "isOverall": false, "label": "200 users", "isController": false}, {"data": [[1.6655619E12, 5499.065355329941]], "isOverall": false, "label": "300 users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6655619E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66556178E12, "maxY": 0.42512690355330013, "series": [{"data": [[1.66556184E12, 0.12131147540983606]], "isOverall": false, "label": "100 users", "isController": false}, {"data": [[1.66556178E12, 0.04922566371681425]], "isOverall": false, "label": "50 users", "isController": false}, {"data": [[1.66556184E12, 0.2717149220489975], [1.6655619E12, 0.0]], "isOverall": false, "label": "200 users", "isController": false}, {"data": [[1.6655619E12, 0.42512690355330013]], "isOverall": false, "label": "300 users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6655619E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 78.0, "minX": 1.66556178E12, "maxY": 11308.0, "series": [{"data": [[1.66556184E12, 7900.0], [1.6655619E12, 11308.0], [1.66556178E12, 1902.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66556184E12, 5827.500000000002], [1.6655619E12, 8903.800000000001], [1.66556178E12, 1373.1000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66556184E12, 7462.27], [1.6655619E12, 10913.72], [1.66556178E12, 1753.2800000000007]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66556184E12, 6749.099999999999], [1.6655619E12, 9842.999999999996], [1.66556178E12, 1517.2999999999997]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66556184E12, 110.0], [1.6655619E12, 133.0], [1.66556178E12, 78.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66556184E12, 2260.5], [1.6655619E12, 4891.0], [1.66556178E12, 715.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6655619E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 214.0, "minX": 2.0, "maxY": 9469.0, "series": [{"data": [[2.0, 2349.5], [33.0, 517.0], [37.0, 494.5], [36.0, 2217.5], [39.0, 9469.0], [41.0, 4029.5], [40.0, 8396.0], [43.0, 3587.0], [45.0, 1562.0], [44.0, 4151.0], [46.0, 2950.5], [47.0, 4166.0], [49.0, 3721.5], [48.0, 3360.5], [3.0, 1298.5], [51.0, 1471.0], [50.0, 1786.0], [52.0, 1430.5], [53.0, 2846.0], [55.0, 5090.0], [54.0, 2685.0], [56.0, 2792.0], [57.0, 1911.5], [58.0, 1333.5], [59.0, 1795.5], [60.0, 214.0], [62.0, 1278.5], [66.0, 367.0], [65.0, 539.0], [67.0, 728.0], [64.0, 731.0], [70.0, 865.5], [71.0, 681.5], [72.0, 721.0], [76.0, 792.0], [92.0, 769.5], [115.0, 910.0], [11.0, 2110.0], [215.0, 4770.0], [220.0, 3145.5], [16.0, 696.5], [18.0, 3714.0], [19.0, 637.0], [27.0, 1305.0], [28.0, 803.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 220.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 213.5, "minX": 2.0, "maxY": 9469.0, "series": [{"data": [[2.0, 2349.5], [33.0, 517.0], [37.0, 494.5], [36.0, 2217.5], [39.0, 9469.0], [41.0, 4029.5], [40.0, 8396.0], [43.0, 3587.0], [45.0, 1562.0], [44.0, 4151.0], [46.0, 2950.5], [47.0, 4166.0], [49.0, 3721.0], [48.0, 3360.5], [3.0, 1298.5], [51.0, 1471.0], [50.0, 1785.5], [52.0, 1430.5], [53.0, 2846.0], [55.0, 5090.0], [54.0, 2685.0], [56.0, 2792.0], [57.0, 1911.5], [58.0, 1333.0], [59.0, 1795.5], [60.0, 213.5], [62.0, 1278.5], [66.0, 367.0], [65.0, 539.0], [67.0, 728.0], [64.0, 731.0], [70.0, 865.5], [71.0, 681.5], [72.0, 721.0], [76.0, 792.0], [92.0, 769.0], [115.0, 910.0], [11.0, 2110.0], [215.0, 4770.0], [220.0, 3145.5], [16.0, 696.5], [18.0, 3713.5], [19.0, 637.0], [27.0, 1305.0], [28.0, 803.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 220.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 26.466666666666665, "minX": 1.66556178E12, "maxY": 51.166666666666664, "series": [{"data": [[1.66556184E12, 51.166666666666664], [1.6655619E12, 26.466666666666665], [1.66556178E12, 30.15]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6655619E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 29.783333333333335, "minX": 1.66556178E12, "maxY": 47.86666666666667, "series": [{"data": [[1.66556184E12, 47.86666666666667], [1.6655619E12, 29.783333333333335], [1.66556178E12, 30.133333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6655619E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.5166666666666666, "minX": 1.66556178E12, "maxY": 30.133333333333333, "series": [{"data": [[1.6655619E12, 26.266666666666666]], "isOverall": false, "label": "300 users-success", "isController": false}, {"data": [[1.66556184E12, 22.45], [1.6655619E12, 3.5166666666666666]], "isOverall": false, "label": "200 users-success", "isController": false}, {"data": [[1.66556178E12, 30.133333333333333]], "isOverall": false, "label": "50 users-success", "isController": false}, {"data": [[1.66556184E12, 25.416666666666668]], "isOverall": false, "label": "100 users-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6655619E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 29.783333333333335, "minX": 1.66556178E12, "maxY": 47.86666666666667, "series": [{"data": [[1.66556184E12, 47.86666666666667], [1.6655619E12, 29.783333333333335], [1.66556178E12, 30.133333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6655619E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

